# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@BOTAN110_TRUE@am__append_1 = $(BOTAN110_CFLAGS)
@BOTAN18_TRUE@am__append_2 = $(BOTAN18_CFLAGS)
@PKCS11_TRUE@am__append_3 = $(P11KIT1_CFLAGS)
sbin_PROGRAMS = pdns_server$(EXEEXT)
bin_PROGRAMS = pdns_control$(EXEEXT) pdnssec$(EXEEXT) \
	zone2sql$(EXEEXT) zone2ldap$(EXEEXT) zone2json$(EXEEXT) \
	$(am__EXEEXT_1) $(am__EXEEXT_2)
@TOOLS_TRUE@am__append_4 = dnsbulktest dnsreplay dnsscan dnsscope dnstcpbench dnswasher nproxy dnsdist nsec3dig saxfr
EXTRA_PROGRAMS = pdns_recursor$(EXEEXT) sdig$(EXEEXT) saxfr$(EXEEXT) \
	dnstcpbench$(EXEEXT) dnsdist$(EXEEXT) tsig-tests$(EXEEXT) \
	speedtest$(EXEEXT) dnsscope$(EXEEXT) dnsgram$(EXEEXT) \
	rec_control$(EXEEXT) testrunner$(EXEEXT) dnsreplay$(EXEEXT) \
	zone2lmdb$(EXEEXT) toysdig$(EXEEXT) dnsdemog$(EXEEXT) \
	dnswasher$(EXEEXT) dnsscan$(EXEEXT) nproxy$(EXEEXT) \
	notify$(EXEEXT) dnsbulktest$(EXEEXT) nsec3dig$(EXEEXT) \
	saxfr$(EXEEXT)
@BOTAN110_TRUE@am__append_5 = botan110signers.cc botansigners.cc
@BOTAN110_TRUE@am__append_6 = $(BOTAN110_LIBS) -lgmp -lrt
@BOTAN18_TRUE@am__append_7 = botan18signers.cc botansigners.cc
@BOTAN18_TRUE@am__append_8 = $(BOTAN18_LIBS) -lgmp
@CRYPTOPP_TRUE@am__append_9 = cryptoppsigners.cc
@CRYPTOPP_TRUE@am__append_10 = $(CRYPTOPP_LIBS)
@SQLITE3_TRUE@am__append_11 = ssqlite3.cc ssqlite3.hh
@ORACLE_TRUE@am__append_12 = $(ORACLE_LIBS)
@PKCS11_TRUE@am__append_13 = pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__append_14 = $(P11KIT1_LIBS)
@LMDB_TRUE@am__append_15 = zone2lmdb
@BOTAN110_TRUE@am__append_16 = botan110signers.cc botansigners.cc
@BOTAN110_TRUE@am__append_17 = $(BOTAN110_LIBS) -lgmp -lrt
@BOTAN18_TRUE@am__append_18 = botan18signers.cc botansigners.cc
@BOTAN18_TRUE@am__append_19 = $(BOTAN18_LIBS) -lgmp
@CRYPTOPP_TRUE@am__append_20 = cryptoppsigners.cc
@CRYPTOPP_TRUE@am__append_21 = -lcryptopp
@SQLITE3_TRUE@am__append_22 = ssqlite3.cc ssqlite3.hh
@ORACLE_TRUE@am__append_23 = $(ORACLE_LIBS)
@PKCS11_TRUE@am__append_24 = pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__append_25 = $(P11KIT1_LIBS)
@PKCS11_TRUE@am__append_26 = pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__append_27 = $(P11KIT1_LIBS)
@PKCS11_TRUE@am__append_28 = pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__append_29 = $(P11KIT1_LIBS)
@PKCS11_TRUE@am__append_30 = pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__append_31 = $(P11KIT1_LIBS)
@PKCS11_TRUE@am__append_32 = pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__append_33 = $(P11KIT1_LIBS)
@UNIT_TESTS_TRUE@TESTS = testrunner$(EXEEXT)
subdir = pdns
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/pdns.in bindlexer.c bindparser.cc bindparser.h
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/boost.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pdns_check_cdb.m4 \
	$(top_srcdir)/m4/pdns_check_ldap.m4 \
	$(top_srcdir)/m4/pdns_check_opendbx.m4 \
	$(top_srcdir)/m4/pdns_check_ragel.m4 \
	$(top_srcdir)/m4/pdns_d_fortify_source.m4 \
	$(top_srcdir)/m4/pdns_enable_botan.m4 \
	$(top_srcdir)/m4/pdns_enable_p11kit.m4 \
	$(top_srcdir)/m4/pdns_enable_remotebackend_zeromq.m4 \
	$(top_srcdir)/m4/pdns_enable_unit_tests.m4 \
	$(top_srcdir)/m4/pdns_enable_verbose_logging.m4 \
	$(top_srcdir)/m4/pdns_param_ssp_buffer_size.m4 \
	$(top_srcdir)/m4/pdns_pie.m4 $(top_srcdir)/m4/pdns_relro.m4 \
	$(top_srcdir)/m4/pdns_stack_protector.m4 \
	$(top_srcdir)/m4/pdns_with_cryptopp.m4 \
	$(top_srcdir)/m4/pdns_with_geo.m4 \
	$(top_srcdir)/m4/pdns_with_lmdb.m4 \
	$(top_srcdir)/m4/pdns_with_lua.m4 \
	$(top_srcdir)/m4/pdns_with_mysql.m4 \
	$(top_srcdir)/m4/pdns_with_oracle.m4 \
	$(top_srcdir)/m4/pdns_with_postgresql.m4 \
	$(top_srcdir)/m4/pdns_with_system_polarssl.m4 \
	$(top_srcdir)/m4/tm-gmtoff.m4 $(top_srcdir)/m4/warnings.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = pdns
CONFIG_CLEAN_VPATH_FILES =
@TOOLS_TRUE@am__EXEEXT_1 = dnsbulktest$(EXEEXT) dnsreplay$(EXEEXT) \
@TOOLS_TRUE@	dnsscan$(EXEEXT) dnsscope$(EXEEXT) \
@TOOLS_TRUE@	dnstcpbench$(EXEEXT) dnswasher$(EXEEXT) \
@TOOLS_TRUE@	nproxy$(EXEEXT) dnsdist$(EXEEXT) nsec3dig$(EXEEXT) \
@TOOLS_TRUE@	saxfr$(EXEEXT)
@LMDB_TRUE@am__EXEEXT_2 = zone2lmdb$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" \
	"$(DESTDIR)$(sysconfdir)"
PROGRAMS = $(bin_PROGRAMS) $(sbin_PROGRAMS)
am_dnsbulktest_OBJECTS = dnsbulktest.$(OBJEXT) misc.$(OBJEXT) \
	unix_utility.$(OBJEXT) qtype.$(OBJEXT) logger.$(OBJEXT) \
	statbag.$(OBJEXT) dnsparser.$(OBJEXT) dnsrecords.$(OBJEXT) \
	dnswriter.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) base32.$(OBJEXT) base64.$(OBJEXT) \
	sillyrecords.$(OBJEXT) nsecrecords.$(OBJEXT)
dnsbulktest_OBJECTS = $(am_dnsbulktest_OBJECTS)
am__DEPENDENCIES_1 =
dnsbulktest_DEPENDENCIES = $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
dnsbulktest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dnsbulktest_LDFLAGS) $(LDFLAGS) -o $@
am_dnsdemog_OBJECTS = dnsdemog.$(OBJEXT) misc.$(OBJEXT) \
	unix_utility.$(OBJEXT) qtype.$(OBJEXT) logger.$(OBJEXT) \
	statbag.$(OBJEXT) dnspcap.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) base64.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	sillyrecords.$(OBJEXT) nsecrecords.$(OBJEXT) base32.$(OBJEXT)
dnsdemog_OBJECTS = $(am_dnsdemog_OBJECTS)
dnsdemog_LDADD = $(LDADD)
am_dnsdist_OBJECTS = dnsdist.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) misc.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	base64.$(OBJEXT) unix_utility.$(OBJEXT) logger.$(OBJEXT) \
	statbag.$(OBJEXT) qtype.$(OBJEXT) sillyrecords.$(OBJEXT) \
	nsecrecords.$(OBJEXT) base32.$(OBJEXT) iputils.$(OBJEXT)
dnsdist_OBJECTS = $(am_dnsdist_OBJECTS)
dnsdist_DEPENDENCIES = $(am__DEPENDENCIES_1)
dnsdist_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dnsdist_LDFLAGS) $(LDFLAGS) -o $@
am_dnsgram_OBJECTS = dnsgram.$(OBJEXT) misc.$(OBJEXT) \
	unix_utility.$(OBJEXT) qtype.$(OBJEXT) logger.$(OBJEXT) \
	statbag.$(OBJEXT) dnspcap.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) base64.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	sillyrecords.$(OBJEXT) nsecrecords.$(OBJEXT) base32.$(OBJEXT)
dnsgram_OBJECTS = $(am_dnsgram_OBJECTS)
dnsgram_LDADD = $(LDADD)
am_dnsreplay_OBJECTS = dnsreplay.$(OBJEXT) misc.$(OBJEXT) \
	qtype.$(OBJEXT) logger.$(OBJEXT) statbag.$(OBJEXT) \
	dnspcap.$(OBJEXT) dnsparser.$(OBJEXT) dnsrecords.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) base64.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) unix_utility.$(OBJEXT) \
	sillyrecords.$(OBJEXT) nsecrecords.$(OBJEXT) base32.$(OBJEXT)
dnsreplay_OBJECTS = $(am_dnsreplay_OBJECTS)
dnsreplay_DEPENDENCIES = $(am__DEPENDENCIES_1)
dnsreplay_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dnsreplay_LDFLAGS) $(LDFLAGS) -o $@
am_dnsscan_OBJECTS = dnsscan.$(OBJEXT) misc.$(OBJEXT) qtype.$(OBJEXT) \
	logger.$(OBJEXT) statbag.$(OBJEXT) dnspcap.$(OBJEXT) \
	dnsparser.$(OBJEXT) dnsrecords.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) base64.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) unix_utility.$(OBJEXT) \
	sillyrecords.$(OBJEXT) nsecrecords.$(OBJEXT) base32.$(OBJEXT)
dnsscan_OBJECTS = $(am_dnsscan_OBJECTS)
dnsscan_LDADD = $(LDADD)
am_dnsscope_OBJECTS = dnsscope.$(OBJEXT) misc.$(OBJEXT) \
	unix_utility.$(OBJEXT) qtype.$(OBJEXT) logger.$(OBJEXT) \
	statbag.$(OBJEXT) dnspcap.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) base64.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	sillyrecords.$(OBJEXT) nsecrecords.$(OBJEXT) base32.$(OBJEXT) \
	dns.$(OBJEXT) arguments.$(OBJEXT)
dnsscope_OBJECTS = $(am_dnsscope_OBJECTS)
dnsscope_DEPENDENCIES = $(am__DEPENDENCIES_1)
dnsscope_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dnsscope_LDFLAGS) $(LDFLAGS) -o $@
am_dnstcpbench_OBJECTS = dnstcpbench.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) misc.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	base64.$(OBJEXT) unix_utility.$(OBJEXT) logger.$(OBJEXT) \
	statbag.$(OBJEXT) qtype.$(OBJEXT) sillyrecords.$(OBJEXT) \
	nsecrecords.$(OBJEXT) base32.$(OBJEXT)
dnstcpbench_OBJECTS = $(am_dnstcpbench_OBJECTS)
dnstcpbench_DEPENDENCIES = $(am__DEPENDENCIES_1)
dnstcpbench_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dnstcpbench_LDFLAGS) $(LDFLAGS) -o $@
am_dnswasher_OBJECTS = dnswasher.$(OBJEXT) misc.$(OBJEXT) \
	unix_utility.$(OBJEXT) qtype.$(OBJEXT) logger.$(OBJEXT) \
	statbag.$(OBJEXT) dnspcap.$(OBJEXT)
dnswasher_OBJECTS = $(am_dnswasher_OBJECTS)
dnswasher_LDADD = $(LDADD)
dnswasher_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dnswasher_LDFLAGS) $(LDFLAGS) -o $@
am_notify_OBJECTS = notify.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) rcpgenerator.$(OBJEXT) base64.$(OBJEXT) \
	dnswriter.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	sillyrecords.$(OBJEXT) selectmplexer.$(OBJEXT) \
	nsecrecords.$(OBJEXT) base32.$(OBJEXT) misc.$(OBJEXT) \
	unix_utility.$(OBJEXT) logger.$(OBJEXT) qtype.$(OBJEXT) \
	statbag.$(OBJEXT) dns.$(OBJEXT) arguments.$(OBJEXT)
notify_OBJECTS = $(am_notify_OBJECTS)
notify_DEPENDENCIES = $(am__DEPENDENCIES_1)
notify_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(notify_LDFLAGS) $(LDFLAGS) -o $@
am_nproxy_OBJECTS = nproxy.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) rcpgenerator.$(OBJEXT) base64.$(OBJEXT) \
	dnswriter.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	sillyrecords.$(OBJEXT) selectmplexer.$(OBJEXT) misc.$(OBJEXT) \
	nsecrecords.$(OBJEXT) unix_utility.$(OBJEXT) qtype.$(OBJEXT) \
	logger.$(OBJEXT) statbag.$(OBJEXT) base32.$(OBJEXT)
nproxy_OBJECTS = $(am_nproxy_OBJECTS)
nproxy_DEPENDENCIES = $(am__DEPENDENCIES_1)
nproxy_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(nproxy_LDFLAGS) $(LDFLAGS) -o $@
am__nsec3dig_SOURCES_DIST = nsec3dig.cc sstuff.hh dnsparser.cc \
	dnsparser.hh dnsrecords.cc dnswriter.cc dnslabeltext.cc \
	dnswriter.hh dnssecinfra.cc misc.cc misc.hh rcpgenerator.cc \
	rcpgenerator.hh base64.cc base64.hh unix_utility.cc logger.cc \
	statbag.cc qtype.cc sillyrecords.cc nsecrecords.cc base32.cc \
	pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__objects_1 = pkcs11signers.$(OBJEXT)
am_nsec3dig_OBJECTS = nsec3dig.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnssecinfra.$(OBJEXT) misc.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) base64.$(OBJEXT) unix_utility.$(OBJEXT) \
	logger.$(OBJEXT) statbag.$(OBJEXT) qtype.$(OBJEXT) \
	sillyrecords.$(OBJEXT) nsecrecords.$(OBJEXT) base32.$(OBJEXT) \
	$(am__objects_1)
nsec3dig_OBJECTS = $(am_nsec3dig_OBJECTS)
@PKCS11_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
nsec3dig_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_pdns_control_OBJECTS = dynloader.$(OBJEXT) dynmessenger.$(OBJEXT) \
	arguments.$(OBJEXT) logger.$(OBJEXT) statbag.$(OBJEXT) \
	misc.$(OBJEXT) unix_utility.$(OBJEXT) qtype.$(OBJEXT)
pdns_control_OBJECTS = $(am_pdns_control_OBJECTS)
pdns_control_LDADD = $(LDADD)
pdns_control_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(pdns_control_LDFLAGS) $(LDFLAGS) -o $@
am__dirstamp = $(am__leading_dot)dirstamp
am_pdns_recursor_OBJECTS = syncres.$(OBJEXT) misc.$(OBJEXT) \
	unix_utility.$(OBJEXT) qtype.$(OBJEXT) logger.$(OBJEXT) \
	statbag.$(OBJEXT) arguments.$(OBJEXT) lwres.$(OBJEXT) \
	pdns_recursor.$(OBJEXT) reczones.$(OBJEXT) \
	recursor_cache.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnswriter.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	dnsrecords.$(OBJEXT) rcpgenerator.$(OBJEXT) base64.$(OBJEXT) \
	zoneparser-tng.$(OBJEXT) rec_channel.$(OBJEXT) \
	rec_channel_rec.$(OBJEXT) selectmplexer.$(OBJEXT) \
	epollmplexer.$(OBJEXT) sillyrecords.$(OBJEXT) htimer.$(OBJEXT) \
	dns_random.$(OBJEXT) lua-pdns.$(OBJEXT) lua-recursor.$(OBJEXT) \
	randomhelper.$(OBJEXT) recpacketcache.$(OBJEXT) dns.$(OBJEXT) \
	nsecrecords.$(OBJEXT) base32.$(OBJEXT) ws-recursor.$(OBJEXT) \
	ws-api.$(OBJEXT) webserver.$(OBJEXT) json.$(OBJEXT) \
	version.$(OBJEXT) responsestats.$(OBJEXT) rec-carbon.$(OBJEXT) \
	ext/yahttp/yahttp/reqresp.$(OBJEXT) \
	ext/yahttp/yahttp/router.$(OBJEXT)
pdns_recursor_OBJECTS = $(am_pdns_recursor_OBJECTS)
pdns_recursor_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
pdns_recursor_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(pdns_recursor_LDFLAGS) $(LDFLAGS) \
	-o $@
am__pdns_server_SOURCES_DIST = dnspacket.cc nameserver.cc \
	tcpreceiver.hh qtype.cc logger.cc arguments.cc \
	packethandler.cc tcpreceiver.cc packetcache.cc statbag.cc \
	pdnsexception.hh arguments.hh distributor.hh dns.hh \
	dnsbackend.hh dnsbackend.cc dnspacket.hh dynmessenger.hh \
	lock.hh logger.hh nameserver.hh packetcache.hh \
	packethandler.hh qtype.hh statbag.hh ueberbackend.hh \
	pdns.conf-dist ws-auth.hh ws-auth.cc ws-api.cc ws-api.hh \
	webserver.cc webserver.hh misc.cc misc.hh receiver.cc \
	ueberbackend.cc dynlistener.cc dynlistener.hh dynhandler.cc \
	dynhandler.hh resolver.hh resolver.cc slavecommunicator.cc \
	mastercommunicator.cc communicator.cc communicator.hh \
	dnsproxy.cc dnsproxy.hh unix_utility.cc common_startup.cc \
	utility.hh iputils.hh common_startup.hh unix_semaphore.cc \
	bind-dnssec.schema.sqlite3.sql.h bindparser.cc bindlexer.c \
	backends/gsql/gsqlbackend.cc backends/gsql/gsqlbackend.hh \
	backends/gsql/ssql.hh base64.cc sillyrecords.cc base64.hh \
	zoneparser-tng.cc dnsrecords.cc dnswriter.cc rcpgenerator.cc \
	dnsparser.cc dns_random.hh dns_random.cc randomhelper.cc \
	namespaces.hh nsecrecords.cc base32.cc dbdnsseckeeper.cc \
	dnssecinfra.cc dnsseckeeper.hh dnssecinfra.hh base32.hh dns.cc \
	dnssecsigner.cc polarrsakeyinfra.cc sha.hh md5.hh \
	signingpipe.cc signingpipe.hh dnslabeltext.cc lua-pdns.cc \
	lua-auth.cc lua-auth.hh serialtweaker.cc ednssubnet.cc \
	ednssubnet.hh cachecleaner.hh json.cc json.hh version.hh \
	version.cc rfc2136handler.cc responsestats.cc responsestats.hh \
	comment.hh auth-carbon.cc botan110signers.cc botansigners.cc \
	botan18signers.cc cryptoppsigners.cc ssqlite3.cc ssqlite3.hh \
	pkcs11signers.cc pkcs11signers.hh
@BOTAN110_TRUE@am__objects_2 = botan110signers.$(OBJEXT) \
@BOTAN110_TRUE@	botansigners.$(OBJEXT)
@BOTAN18_TRUE@am__objects_3 = botan18signers.$(OBJEXT) \
@BOTAN18_TRUE@	botansigners.$(OBJEXT)
@CRYPTOPP_TRUE@am__objects_4 = cryptoppsigners.$(OBJEXT)
@SQLITE3_TRUE@am__objects_5 = ssqlite3.$(OBJEXT)
am_pdns_server_OBJECTS = dnspacket.$(OBJEXT) nameserver.$(OBJEXT) \
	qtype.$(OBJEXT) logger.$(OBJEXT) arguments.$(OBJEXT) \
	packethandler.$(OBJEXT) tcpreceiver.$(OBJEXT) \
	packetcache.$(OBJEXT) statbag.$(OBJEXT) dnsbackend.$(OBJEXT) \
	ws-auth.$(OBJEXT) ws-api.$(OBJEXT) webserver.$(OBJEXT) \
	misc.$(OBJEXT) receiver.$(OBJEXT) ueberbackend.$(OBJEXT) \
	dynlistener.$(OBJEXT) dynhandler.$(OBJEXT) resolver.$(OBJEXT) \
	slavecommunicator.$(OBJEXT) mastercommunicator.$(OBJEXT) \
	communicator.$(OBJEXT) dnsproxy.$(OBJEXT) \
	unix_utility.$(OBJEXT) common_startup.$(OBJEXT) \
	unix_semaphore.$(OBJEXT) bindparser.$(OBJEXT) \
	bindlexer.$(OBJEXT) backends/gsql/gsqlbackend.$(OBJEXT) \
	base64.$(OBJEXT) sillyrecords.$(OBJEXT) \
	zoneparser-tng.$(OBJEXT) dnsrecords.$(OBJEXT) \
	dnswriter.$(OBJEXT) rcpgenerator.$(OBJEXT) dnsparser.$(OBJEXT) \
	dns_random.$(OBJEXT) randomhelper.$(OBJEXT) \
	nsecrecords.$(OBJEXT) base32.$(OBJEXT) \
	dbdnsseckeeper.$(OBJEXT) dnssecinfra.$(OBJEXT) dns.$(OBJEXT) \
	dnssecsigner.$(OBJEXT) polarrsakeyinfra.$(OBJEXT) \
	signingpipe.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	lua-pdns.$(OBJEXT) lua-auth.$(OBJEXT) serialtweaker.$(OBJEXT) \
	ednssubnet.$(OBJEXT) json.$(OBJEXT) version.$(OBJEXT) \
	rfc2136handler.$(OBJEXT) responsestats.$(OBJEXT) \
	auth-carbon.$(OBJEXT) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) $(am__objects_1)
pdns_server_OBJECTS = $(am_pdns_server_OBJECTS)
@BOTAN110_TRUE@am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
@BOTAN18_TRUE@am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
@CRYPTOPP_TRUE@am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
@ORACLE_TRUE@am__DEPENDENCIES_6 = $(am__DEPENDENCIES_1)
pdns_server_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_6) $(am__DEPENDENCIES_2)
pdns_server_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(pdns_server_LDFLAGS) $(LDFLAGS) -o $@
am__pdnssec_SOURCES_DIST = pdnssec.cc dbdnsseckeeper.cc sstuff.hh \
	dnsparser.cc dnsparser.hh dnsrecords.cc dnswriter.cc \
	dnswriter.hh misc.cc misc.hh rcpgenerator.cc rcpgenerator.hh \
	base64.cc base64.hh unix_utility.cc logger.cc statbag.cc \
	qtype.cc sillyrecords.cc nsecrecords.cc dnssecinfra.cc \
	dnssecinfra.hh base32.cc ueberbackend.cc dnsbackend.cc \
	arguments.cc packetcache.cc dnspacket.cc bindparser.cc \
	bindlexer.c backends/gsql/gsqlbackend.cc \
	backends/gsql/gsqlbackend.hh backends/gsql/ssql.hh \
	zoneparser-tng.cc dynlistener.cc dns.cc dnssecsigner.cc \
	polarrsakeyinfra.cc signingpipe.cc dnslabeltext.cc \
	ednssubnet.cc cachecleaner.hh dns_random.cc json.cc \
	serialtweaker.cc randomhelper.cc botan110signers.cc \
	botansigners.cc botan18signers.cc cryptoppsigners.cc \
	ssqlite3.cc ssqlite3.hh pkcs11signers.cc pkcs11signers.hh
am_pdnssec_OBJECTS = pdnssec.$(OBJEXT) dbdnsseckeeper.$(OBJEXT) \
	dnsparser.$(OBJEXT) dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	misc.$(OBJEXT) rcpgenerator.$(OBJEXT) base64.$(OBJEXT) \
	unix_utility.$(OBJEXT) logger.$(OBJEXT) statbag.$(OBJEXT) \
	qtype.$(OBJEXT) sillyrecords.$(OBJEXT) nsecrecords.$(OBJEXT) \
	dnssecinfra.$(OBJEXT) base32.$(OBJEXT) ueberbackend.$(OBJEXT) \
	dnsbackend.$(OBJEXT) arguments.$(OBJEXT) packetcache.$(OBJEXT) \
	dnspacket.$(OBJEXT) bindparser.$(OBJEXT) bindlexer.$(OBJEXT) \
	backends/gsql/gsqlbackend.$(OBJEXT) zoneparser-tng.$(OBJEXT) \
	dynlistener.$(OBJEXT) dns.$(OBJEXT) dnssecsigner.$(OBJEXT) \
	polarrsakeyinfra.$(OBJEXT) signingpipe.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) ednssubnet.$(OBJEXT) \
	dns_random.$(OBJEXT) json.$(OBJEXT) serialtweaker.$(OBJEXT) \
	randomhelper.$(OBJEXT) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) $(am__objects_1)
pdnssec_OBJECTS = $(am_pdnssec_OBJECTS)
pdnssec_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_6) $(am__DEPENDENCIES_2)
pdnssec_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(pdnssec_LDFLAGS) $(LDFLAGS) -o $@
am_rec_control_OBJECTS = rec_channel.$(OBJEXT) rec_control.$(OBJEXT) \
	arguments.$(OBJEXT) misc.$(OBJEXT) qtype.$(OBJEXT) \
	unix_utility.$(OBJEXT) logger.$(OBJEXT) statbag.$(OBJEXT)
rec_control_OBJECTS = $(am_rec_control_OBJECTS)
rec_control_LDADD = $(LDADD)
am__saxfr_SOURCES_DIST = saxfr.cc sstuff.hh dnsparser.cc dnsparser.hh \
	dnsrecords.cc dnswriter.cc dnslabeltext.cc dnswriter.hh \
	misc.cc misc.hh rcpgenerator.cc rcpgenerator.hh base64.cc \
	base64.hh unix_utility.cc logger.cc statbag.cc qtype.cc \
	sillyrecords.cc nsecrecords.cc base32.cc dnssecinfra.cc \
	pkcs11signers.cc pkcs11signers.hh
am_saxfr_OBJECTS = saxfr.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) misc.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	base64.$(OBJEXT) unix_utility.$(OBJEXT) logger.$(OBJEXT) \
	statbag.$(OBJEXT) qtype.$(OBJEXT) sillyrecords.$(OBJEXT) \
	nsecrecords.$(OBJEXT) base32.$(OBJEXT) dnssecinfra.$(OBJEXT) \
	$(am__objects_1)
saxfr_OBJECTS = $(am_saxfr_OBJECTS)
saxfr_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_sdig_OBJECTS = sdig.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) misc.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	base64.$(OBJEXT) unix_utility.$(OBJEXT) logger.$(OBJEXT) \
	statbag.$(OBJEXT) qtype.$(OBJEXT) sillyrecords.$(OBJEXT) \
	nsecrecords.$(OBJEXT) base32.$(OBJEXT)
sdig_OBJECTS = $(am_sdig_OBJECTS)
sdig_LDADD = $(LDADD)
am_speedtest_OBJECTS = speedtest.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) misc.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	base64.$(OBJEXT) unix_utility.$(OBJEXT) qtype.$(OBJEXT) \
	sillyrecords.$(OBJEXT) logger.$(OBJEXT) statbag.$(OBJEXT) \
	nsecrecords.$(OBJEXT) base32.$(OBJEXT)
speedtest_OBJECTS = $(am_speedtest_OBJECTS)
speedtest_LDADD = $(LDADD)
am__testrunner_SOURCES_DIST = testrunner.cc test-misc_hh.cc \
	test-nameserver_cc.cc test-dnsrecords_cc.cc test-base32_cc.cc \
	test-md5_hh.cc test-sha_hh.cc nameserver.cc misc.cc \
	unix_utility.cc logger.cc statbag.cc arguments.cc qtype.cc \
	dnspacket.cc dnswriter.cc base64.cc base32.cc dnsrecords.cc \
	dnslabeltext.cc dnsparser.cc rcpgenerator.cc ednssubnet.cc \
	nsecrecords.cc sillyrecords.cc dnssecinfra.cc \
	test-base64_cc.cc test-iputils_hh.cc test-dns_random_hh.cc \
	dns_random.cc test-rcpgenerator_cc.cc responsestats.cc \
	test-bindparser_cc.cc bindparser.cc bindlexer.c \
	test-zoneparser_tng_cc.cc zoneparser-tng.hh zoneparser-tng.cc \
	dns.cc pkcs11signers.cc pkcs11signers.hh
am_testrunner_OBJECTS = testrunner.$(OBJEXT) test-misc_hh.$(OBJEXT) \
	test-nameserver_cc.$(OBJEXT) test-dnsrecords_cc.$(OBJEXT) \
	test-base32_cc.$(OBJEXT) test-md5_hh.$(OBJEXT) \
	test-sha_hh.$(OBJEXT) nameserver.$(OBJEXT) misc.$(OBJEXT) \
	unix_utility.$(OBJEXT) logger.$(OBJEXT) statbag.$(OBJEXT) \
	arguments.$(OBJEXT) qtype.$(OBJEXT) dnspacket.$(OBJEXT) \
	dnswriter.$(OBJEXT) base64.$(OBJEXT) base32.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	dnsparser.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	ednssubnet.$(OBJEXT) nsecrecords.$(OBJEXT) \
	sillyrecords.$(OBJEXT) dnssecinfra.$(OBJEXT) \
	test-base64_cc.$(OBJEXT) test-iputils_hh.$(OBJEXT) \
	test-dns_random_hh.$(OBJEXT) dns_random.$(OBJEXT) \
	test-rcpgenerator_cc.$(OBJEXT) responsestats.$(OBJEXT) \
	test-bindparser_cc.$(OBJEXT) bindparser.$(OBJEXT) \
	bindlexer.$(OBJEXT) test-zoneparser_tng_cc.$(OBJEXT) \
	zoneparser-tng.$(OBJEXT) dns.$(OBJEXT) $(am__objects_1)
testrunner_OBJECTS = $(am_testrunner_OBJECTS)
testrunner_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
testrunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(testrunner_LDFLAGS) $(LDFLAGS) -o $@
am_toysdig_OBJECTS = toysdig.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) misc.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	base64.$(OBJEXT) unix_utility.$(OBJEXT) logger.$(OBJEXT) \
	statbag.$(OBJEXT) qtype.$(OBJEXT) sillyrecords.$(OBJEXT) \
	nsecrecords.$(OBJEXT) base32.$(OBJEXT) ednssubnet.$(OBJEXT) \
	dns_random.$(OBJEXT) randomhelper.$(OBJEXT)
toysdig_OBJECTS = $(am_toysdig_OBJECTS)
toysdig_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__tsig_tests_SOURCES_DIST = tsig-tests.cc sstuff.hh dnsparser.cc \
	dnsparser.hh dnsrecords.cc dnswriter.cc dnslabeltext.cc \
	dnswriter.hh misc.cc misc.hh rcpgenerator.cc rcpgenerator.hh \
	base64.cc base64.hh unix_utility.cc logger.cc statbag.cc \
	qtype.cc sillyrecords.cc nsecrecords.cc base32.cc \
	dnssecinfra.cc resolver.cc arguments.cc dns_random.hh \
	dns_random.cc randomhelper.cc dns.cc pkcs11signers.cc \
	pkcs11signers.hh
am_tsig_tests_OBJECTS = tsig-tests.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) misc.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	base64.$(OBJEXT) unix_utility.$(OBJEXT) logger.$(OBJEXT) \
	statbag.$(OBJEXT) qtype.$(OBJEXT) sillyrecords.$(OBJEXT) \
	nsecrecords.$(OBJEXT) base32.$(OBJEXT) dnssecinfra.$(OBJEXT) \
	resolver.$(OBJEXT) arguments.$(OBJEXT) dns_random.$(OBJEXT) \
	randomhelper.$(OBJEXT) dns.$(OBJEXT) $(am__objects_1)
tsig_tests_OBJECTS = $(am_tsig_tests_OBJECTS)
tsig_tests_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_zone2json_OBJECTS = bindparser.$(OBJEXT) bindlexer.$(OBJEXT) \
	arguments.$(OBJEXT) logger.$(OBJEXT) zone2json.$(OBJEXT) \
	statbag.$(OBJEXT) misc.$(OBJEXT) unix_utility.$(OBJEXT) \
	qtype.$(OBJEXT) zoneparser-tng.$(OBJEXT) dnsrecords.$(OBJEXT) \
	dnswriter.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) dnsparser.$(OBJEXT) base64.$(OBJEXT) \
	sillyrecords.$(OBJEXT) nsecrecords.$(OBJEXT) base32.$(OBJEXT)
zone2json_OBJECTS = $(am_zone2json_OBJECTS)
zone2json_DEPENDENCIES = $(am__DEPENDENCIES_1)
zone2json_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(zone2json_LDFLAGS) $(LDFLAGS) -o $@
am_zone2ldap_OBJECTS = bindparser.$(OBJEXT) bindlexer.$(OBJEXT) \
	arguments.$(OBJEXT) logger.$(OBJEXT) zone2ldap.$(OBJEXT) \
	statbag.$(OBJEXT) misc.$(OBJEXT) unix_utility.$(OBJEXT) \
	qtype.$(OBJEXT) zoneparser-tng.$(OBJEXT) dnsrecords.$(OBJEXT) \
	dnswriter.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) dnsparser.$(OBJEXT) base64.$(OBJEXT) \
	sillyrecords.$(OBJEXT) nsecrecords.$(OBJEXT) base32.$(OBJEXT) \
	dns_random.$(OBJEXT)
zone2ldap_OBJECTS = $(am_zone2ldap_OBJECTS)
zone2ldap_DEPENDENCIES = $(am__DEPENDENCIES_1)
zone2ldap_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(zone2ldap_LDFLAGS) $(LDFLAGS) -o $@
am__zone2lmdb_SOURCES_DIST = bindparser.yy bindlexer.l \
	bind-dnssec.schema.sqlite3.sql.h arguments.cc logger.cc \
	zone2lmdb.cc statbag.cc misc.cc unix_utility.cc qtype.cc \
	zoneparser-tng.cc dnsrecords.cc dnswriter.cc dnslabeltext.cc \
	rcpgenerator.cc dnsparser.cc base64.cc sillyrecords.cc \
	nsecrecords.cc base32.cc bindparserclasses.hh dns_random.cc \
	dns.cc
@LMDB_TRUE@am_zone2lmdb_OBJECTS = bindparser.$(OBJEXT) \
@LMDB_TRUE@	bindlexer.$(OBJEXT) arguments.$(OBJEXT) \
@LMDB_TRUE@	logger.$(OBJEXT) zone2lmdb.$(OBJEXT) \
@LMDB_TRUE@	statbag.$(OBJEXT) misc.$(OBJEXT) \
@LMDB_TRUE@	unix_utility.$(OBJEXT) qtype.$(OBJEXT) \
@LMDB_TRUE@	zoneparser-tng.$(OBJEXT) dnsrecords.$(OBJEXT) \
@LMDB_TRUE@	dnswriter.$(OBJEXT) dnslabeltext.$(OBJEXT) \
@LMDB_TRUE@	rcpgenerator.$(OBJEXT) dnsparser.$(OBJEXT) \
@LMDB_TRUE@	base64.$(OBJEXT) sillyrecords.$(OBJEXT) \
@LMDB_TRUE@	nsecrecords.$(OBJEXT) base32.$(OBJEXT) \
@LMDB_TRUE@	dns_random.$(OBJEXT) dns.$(OBJEXT)
zone2lmdb_OBJECTS = $(am_zone2lmdb_OBJECTS)
@LMDB_TRUE@zone2lmdb_DEPENDENCIES = $(am__DEPENDENCIES_1)
zone2lmdb_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(zone2lmdb_LDFLAGS) $(LDFLAGS) -o $@
am_zone2sql_OBJECTS = bindparser.$(OBJEXT) bindlexer.$(OBJEXT) \
	arguments.$(OBJEXT) logger.$(OBJEXT) zone2sql.$(OBJEXT) \
	statbag.$(OBJEXT) misc.$(OBJEXT) unix_utility.$(OBJEXT) \
	qtype.$(OBJEXT) dns.$(OBJEXT) zoneparser-tng.$(OBJEXT) \
	dnsrecords.$(OBJEXT) sillyrecords.$(OBJEXT) \
	dnswriter.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) dnsparser.$(OBJEXT) base64.$(OBJEXT) \
	nsecrecords.$(OBJEXT) base32.$(OBJEXT) dns_random.$(OBJEXT) \
	json.$(OBJEXT)
zone2sql_OBJECTS = $(am_zone2sql_OBJECTS)
zone2sql_DEPENDENCIES = $(am__DEPENDENCIES_1)
zone2sql_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(zone2sql_LDFLAGS) $(LDFLAGS) -o $@
SCRIPTS = $(noinst_SCRIPTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD " $@;
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_@AM_V@)
am__v_LEX_ = $(am__v_LEX_@AM_DEFAULT_V@)
am__v_LEX_0 = @echo "  LEX   " $@;
YLWRAP = $(top_srcdir)/build-aux/ylwrap
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_@AM_V@)
am__v_YACC_ = $(am__v_YACC_@AM_DEFAULT_V@)
am__v_YACC_0 = @echo "  YACC  " $@;
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(dnsbulktest_SOURCES) $(dnsdemog_SOURCES) \
	$(dnsdist_SOURCES) $(dnsgram_SOURCES) $(dnsreplay_SOURCES) \
	$(dnsscan_SOURCES) $(dnsscope_SOURCES) $(dnstcpbench_SOURCES) \
	$(dnswasher_SOURCES) $(notify_SOURCES) $(nproxy_SOURCES) \
	$(nsec3dig_SOURCES) $(pdns_control_SOURCES) \
	$(pdns_recursor_SOURCES) $(pdns_server_SOURCES) \
	$(pdnssec_SOURCES) $(rec_control_SOURCES) $(saxfr_SOURCES) \
	$(sdig_SOURCES) $(speedtest_SOURCES) $(testrunner_SOURCES) \
	$(toysdig_SOURCES) $(tsig_tests_SOURCES) $(zone2json_SOURCES) \
	$(zone2ldap_SOURCES) $(zone2lmdb_SOURCES) $(zone2sql_SOURCES)
DIST_SOURCES = $(dnsbulktest_SOURCES) $(dnsdemog_SOURCES) \
	$(dnsdist_SOURCES) $(dnsgram_SOURCES) $(dnsreplay_SOURCES) \
	$(dnsscan_SOURCES) $(dnsscope_SOURCES) $(dnstcpbench_SOURCES) \
	$(dnswasher_SOURCES) $(notify_SOURCES) $(nproxy_SOURCES) \
	$(am__nsec3dig_SOURCES_DIST) $(pdns_control_SOURCES) \
	$(pdns_recursor_SOURCES) $(am__pdns_server_SOURCES_DIST) \
	$(am__pdnssec_SOURCES_DIST) $(rec_control_SOURCES) \
	$(am__saxfr_SOURCES_DIST) $(sdig_SOURCES) $(speedtest_SOURCES) \
	$(am__testrunner_SOURCES_DIST) $(toysdig_SOURCES) \
	$(am__tsig_tests_SOURCES_DIST) $(zone2json_SOURCES) \
	$(zone2ldap_SOURCES) $(am__zone2lmdb_SOURCES_DIST) \
	$(zone2sql_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
DATA = $(sysconf_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CPPFLAGS = $(BOOST_CPPFLAGS) $(THREADFLAGS) $(am__append_1) \
	$(am__append_2) $(am__append_3)
AM_CXXFLAGS = @AM_CXXFLAGS@ -DSYSCONFDIR=\"$(sysconfdir)\" \
	-DPKGLIBDIR=\"$(pkglibdir)\" -DLOCALSTATEDIR=\"$(socketdir)\" \
	$(THREADFLAGS) $(LUA_CFLAGS) $(SQLITE3_CFLAGS) \
	$(POLARSSL_CFLAGS) -I$(top_srcdir)/pdns/ext/rapidjson/include \
	-I$(top_srcdir)/pdns/ext/yahttp
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ASCIIDOC = @ASCIIDOC@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDPATH = @BOOST_LDPATH@
BOOST_PROGRAM_OPTIONS_LDFLAGS = @BOOST_PROGRAM_OPTIONS_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LDPATH = @BOOST_PROGRAM_OPTIONS_LDPATH@
BOOST_PROGRAM_OPTIONS_LIBS = @BOOST_PROGRAM_OPTIONS_LIBS@
BOOST_ROOT = @BOOST_ROOT@
BOOST_SERIALIZATION_LDFLAGS = @BOOST_SERIALIZATION_LDFLAGS@
BOOST_SERIALIZATION_LDPATH = @BOOST_SERIALIZATION_LDPATH@
BOOST_SERIALIZATION_LIBS = @BOOST_SERIALIZATION_LIBS@
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = @BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS@
BOOST_UNIT_TEST_FRAMEWORK_LDPATH = @BOOST_UNIT_TEST_FRAMEWORK_LDPATH@
BOOST_UNIT_TEST_FRAMEWORK_LIBS = @BOOST_UNIT_TEST_FRAMEWORK_LIBS@
BOTAN110_CFLAGS = @BOTAN110_CFLAGS@
BOTAN110_LIBS = @BOTAN110_LIBS@
BOTAN18_CFLAGS = @BOTAN18_CFLAGS@
BOTAN18_LIBS = @BOTAN18_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CDB_CFLAGS = @CDB_CFLAGS@
CDB_LIBS = @CDB_LIBS@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CRYPTOPP_CFLAGS = @CRYPTOPP_CFLAGS@
CRYPTOPP_LIBS = @CRYPTOPP_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DIST_HOST = @DIST_HOST@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DYNLINKFLAGS = @DYNLINKFLAGS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GEOIP_CFLAGS = @GEOIP_CFLAGS@
GEOIP_LIBS = @GEOIP_LIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBLDAP = @LIBLDAP@
LIBLMDB = @LIBLMDB@
LIBOBJS = @LIBOBJS@
LIBOPENDBX = @LIBOPENDBX@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBZMQ_CFLAGS = @LIBZMQ_CFLAGS@
LIBZMQ_LIBS = @LIBZMQ_LIBS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LUA_CFLAGS = @LUA_CFLAGS@
LUA_LIBS = @LUA_LIBS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MYSQL_inc = @MYSQL_inc@
MYSQL_lib = @MYSQL_lib@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORACLE_CFLAGS = @ORACLE_CFLAGS@
ORACLE_LIBS = @ORACLE_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
P11KIT1_CFLAGS = @P11KIT1_CFLAGS@
P11KIT1_LIBS = @P11KIT1_LIBS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PGSQL_inc = @PGSQL_inc@
PGSQL_lib = @PGSQL_lib@
PGSQL_pg_config = @PGSQL_pg_config@
PIE_CFLAGS = @PIE_CFLAGS@
PIE_LDFLAGS = @PIE_LDFLAGS@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POLARSSL_CFLAGS = @POLARSSL_CFLAGS@
POLARSSL_LIBS = @POLARSSL_LIBS@
POLARSSL_SUBDIR = @POLARSSL_SUBDIR@
RAGEL = @RAGEL@
RANLIB = @RANLIB@
RELRO_LDFLAGS = @RELRO_LDFLAGS@
REMOTEBACKEND_ZEROMQ = @REMOTEBACKEND_ZEROMQ@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SQLITE3_CFLAGS = @SQLITE3_CFLAGS@
SQLITE3_LIBS = @SQLITE3_LIBS@
STRIP = @STRIP@
THREADFLAGS = @THREADFLAGS@
VERSION = @VERSION@
YACC = @YACC@
YAML_CFLAGS = @YAML_CFLAGS@
YAML_LIBS = @YAML_LIBS@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
moduledirs = @moduledirs@
modulelibs = @modulelibs@
moduleobjects = @moduleobjects@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
programdescend = @programdescend@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
socketdir = @socketdir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
YAHTTP_LIBS = -Lext/yahttp/yahttp -lyahttp
AM_LFLAGS = -i
AM_YFLAGS = -d --verbose --debug
EXTRA_DIST = dnslabeltext.rl dnslabeltext.cc mtasker.cc inflighter.cc docs/pdns_control.8  \
	docs/pdns_server.8 docs/zone2sql.8 docs/zone2ldap.8 docs/pdnssec.8 \
	docs/dnsreplay.8 docs/dnsscope.8 docs/dnswasher.8 docs/pdnssec.8 docs/zone2ldap.8 \
	bind-dnssec.schema.sqlite3.sql bindparser.h named.conf.parsertest

SUBDIRS = ext
BUILT_SOURCES = bind-dnssec.schema.sqlite3.sql.h version_generated.h bindparser.h
CLEANFILES = version_generated.h
noinst_SCRIPTS = pdns
sysconf_DATA = pdns.conf-dist 
pdns_server_SOURCES = dnspacket.cc nameserver.cc tcpreceiver.hh \
	qtype.cc logger.cc arguments.cc packethandler.cc \
	tcpreceiver.cc packetcache.cc statbag.cc pdnsexception.hh \
	arguments.hh distributor.hh dns.hh dnsbackend.hh dnsbackend.cc \
	dnspacket.hh dynmessenger.hh lock.hh logger.hh nameserver.hh \
	packetcache.hh packethandler.hh qtype.hh statbag.hh \
	ueberbackend.hh pdns.conf-dist ws-auth.hh ws-auth.cc ws-api.cc \
	ws-api.hh webserver.cc webserver.hh misc.cc misc.hh \
	receiver.cc ueberbackend.cc dynlistener.cc dynlistener.hh \
	dynhandler.cc dynhandler.hh resolver.hh resolver.cc \
	slavecommunicator.cc mastercommunicator.cc communicator.cc \
	communicator.hh dnsproxy.cc dnsproxy.hh unix_utility.cc \
	common_startup.cc utility.hh iputils.hh common_startup.hh \
	unix_semaphore.cc bind-dnssec.schema.sqlite3.sql.h \
	bindparser.cc bindlexer.c backends/gsql/gsqlbackend.cc \
	backends/gsql/gsqlbackend.hh backends/gsql/ssql.hh base64.cc \
	sillyrecords.cc base64.hh zoneparser-tng.cc dnsrecords.cc \
	dnswriter.cc rcpgenerator.cc dnsparser.cc dns_random.hh \
	dns_random.cc randomhelper.cc namespaces.hh nsecrecords.cc \
	base32.cc dbdnsseckeeper.cc dnssecinfra.cc dnsseckeeper.hh \
	dnssecinfra.hh base32.hh dns.cc dnssecsigner.cc \
	polarrsakeyinfra.cc sha.hh md5.hh signingpipe.cc \
	signingpipe.hh dnslabeltext.cc lua-pdns.cc lua-auth.cc \
	lua-auth.hh serialtweaker.cc ednssubnet.cc ednssubnet.hh \
	cachecleaner.hh json.cc json.hh version.hh version.cc \
	rfc2136handler.cc responsestats.cc responsestats.hh comment.hh \
	auth-carbon.cc $(am__append_5) $(am__append_7) $(am__append_9) \
	$(am__append_11) $(am__append_13)
pdns_server_LDFLAGS = @moduleobjects@ @modulelibs@ $(DYNLINKFLAGS) @LIBDL@ $(THREADFLAGS)  $(BOOST_SERIALIZATION_LDFLAGS) -rdynamic
pdns_server_LDADD = $(POLARSSL_LIBS) $(BOOST_SERIALIZATION_LIBS) \
	$(LUA_LIBS) $(SQLITE3_LIBS) $(YAHTTP_LIBS) $(am__append_6) \
	$(am__append_8) $(am__append_10) $(am__append_12) \
	$(am__append_14)
pdnssec_SOURCES = pdnssec.cc dbdnsseckeeper.cc sstuff.hh dnsparser.cc \
	dnsparser.hh dnsrecords.cc dnswriter.cc dnswriter.hh misc.cc \
	misc.hh rcpgenerator.cc rcpgenerator.hh base64.cc base64.hh \
	unix_utility.cc logger.cc statbag.cc qtype.cc sillyrecords.cc \
	nsecrecords.cc dnssecinfra.cc dnssecinfra.hh base32.cc \
	ueberbackend.cc dnsbackend.cc arguments.cc packetcache.cc \
	dnspacket.cc bindparser.cc bindlexer.c \
	backends/gsql/gsqlbackend.cc backends/gsql/gsqlbackend.hh \
	backends/gsql/ssql.hh zoneparser-tng.cc dynlistener.cc dns.cc \
	dnssecsigner.cc polarrsakeyinfra.cc signingpipe.cc \
	dnslabeltext.cc ednssubnet.cc cachecleaner.hh dns_random.cc \
	json.cc serialtweaker.cc randomhelper.cc $(am__append_16) \
	$(am__append_18) $(am__append_20) $(am__append_22) \
	$(am__append_24)
pdnssec_LDFLAGS = @moduleobjects@ @modulelibs@ $(DYNLINKFLAGS) @LIBDL@ $(THREADFLAGS) $(BOOST_PROGRAM_OPTIONS_LDFLAGS) $(BOOST_SERIALIZATION_LDFLAGS) 
pdnssec_LDADD = $(POLARSSL_LIBS) $(BOOST_PROGRAM_OPTIONS_LIBS) \
	$(BOOST_SERIALIZATION_LIBS) $(SQLITE3_LIBS) $(YAHTTP_LIBS) \
	$(am__append_17) $(am__append_19) $(am__append_21) \
	$(am__append_23) $(am__append_25)
zone2sql_SOURCES = bindparser.yy bindlexer.l bind-dnssec.schema.sqlite3.sql.h \
	arguments.cc logger.cc zone2sql.cc statbag.cc misc.cc \
	unix_utility.cc qtype.cc dns.cc \
	zoneparser-tng.cc dnsrecords.cc sillyrecords.cc \
	dnswriter.cc dnslabeltext.cc rcpgenerator.cc dnsparser.cc base64.cc \
	nsecrecords.cc base32.cc bindparserclasses.hh \
	dns_random.cc json.cc json.hh

zone2sql_LDFLAGS = $(THREADFLAGS)
zone2sql_LDADD = $(POLARSSL_LIBS)
zone2json_SOURCES = bindparser.yy bindlexer.l bind-dnssec.schema.sqlite3.sql.h \
	arguments.cc logger.cc zone2json.cc statbag.cc misc.cc \
	unix_utility.cc qtype.cc zoneparser-tng.cc dnsrecords.cc \
	dnswriter.cc dnslabeltext.cc rcpgenerator.cc dnsparser.cc base64.cc sillyrecords.cc \
	nsecrecords.cc base32.cc bindparserclasses.hh

zone2json_LDFLAGS = $(THREADFLAGS)
zone2json_LDADD = $(POLARSSL_LIBS)
zone2ldap_SOURCES = bindparser.yy bindlexer.l bind-dnssec.schema.sqlite3.sql.h \
	arguments.cc logger.cc zone2ldap.cc statbag.cc misc.cc \
	unix_utility.cc qtype.cc zoneparser-tng.cc dnsrecords.cc \
	dnswriter.cc dnslabeltext.cc rcpgenerator.cc dnsparser.cc base64.cc sillyrecords.cc \
	nsecrecords.cc base32.cc bindparserclasses.hh \
	dns_random.cc

zone2ldap_LDFLAGS = $(THREADFLAGS)
zone2ldap_LDADD = $(POLARSSL_LIBS)
@LMDB_TRUE@zone2lmdb_SOURCES = bindparser.yy bindlexer.l bind-dnssec.schema.sqlite3.sql.h \
@LMDB_TRUE@	arguments.cc logger.cc zone2lmdb.cc statbag.cc misc.cc \
@LMDB_TRUE@	unix_utility.cc qtype.cc zoneparser-tng.cc dnsrecords.cc \
@LMDB_TRUE@	dnswriter.cc dnslabeltext.cc rcpgenerator.cc dnsparser.cc base64.cc sillyrecords.cc \
@LMDB_TRUE@	nsecrecords.cc base32.cc bindparserclasses.hh \
@LMDB_TRUE@	dns_random.cc dns.cc

@LMDB_TRUE@zone2lmdb_LDFLAGS = $(THREADFLAGS)
@LMDB_TRUE@zone2lmdb_LDADD = $(POLARSSL_LIBS) -llmdb
sdig_SOURCES = sdig.cc sstuff.hh dnsparser.cc dnsparser.hh dnsrecords.cc dnswriter.cc dnslabeltext.cc dnswriter.hh \
	misc.cc misc.hh rcpgenerator.cc rcpgenerator.hh base64.cc base64.hh unix_utility.cc \
	logger.cc statbag.cc qtype.cc sillyrecords.cc nsecrecords.cc base32.cc

saxfr_SOURCES = saxfr.cc sstuff.hh dnsparser.cc dnsparser.hh \
	dnsrecords.cc dnswriter.cc dnslabeltext.cc dnswriter.hh \
	misc.cc misc.hh rcpgenerator.cc rcpgenerator.hh base64.cc \
	base64.hh unix_utility.cc logger.cc statbag.cc qtype.cc \
	sillyrecords.cc nsecrecords.cc base32.cc dnssecinfra.cc \
	$(am__append_26)
saxfr_LDADD = $(POLARSSL_LIBS) $(am__append_27)
dnstcpbench_SOURCES = dnstcpbench.cc sstuff.hh dnsparser.cc dnsparser.hh dnsrecords.cc dnswriter.cc dnslabeltext.cc dnswriter.hh \
	misc.cc misc.hh rcpgenerator.cc rcpgenerator.hh base64.cc base64.hh unix_utility.cc \
	logger.cc statbag.cc qtype.cc sillyrecords.cc nsecrecords.cc base32.cc

dnstcpbench_LDFLAGS = $(BOOST_PROGRAM_OPTIONS_LDFLAGS)
dnstcpbench_LDADD = $(BOOST_PROGRAM_OPTIONS_LIBS)
dnsdist_SOURCES = dnsdist.cc sstuff.hh dnsparser.cc dnsparser.hh dnsrecords.cc dnswriter.cc dnslabeltext.cc dnswriter.hh \
	misc.cc misc.hh rcpgenerator.cc rcpgenerator.hh base64.cc base64.hh unix_utility.cc \
	logger.cc statbag.cc qtype.cc sillyrecords.cc nsecrecords.cc base32.cc iputils.cc

dnsdist_LDFLAGS = $(BOOST_PROGRAM_OPTIONS_LDFLAGS)
dnsdist_LDADD = $(BOOST_PROGRAM_OPTIONS_LIBS)
nsec3dig_SOURCES = nsec3dig.cc sstuff.hh dnsparser.cc dnsparser.hh \
	dnsrecords.cc dnswriter.cc dnslabeltext.cc dnswriter.hh \
	dnssecinfra.cc misc.cc misc.hh rcpgenerator.cc rcpgenerator.hh \
	base64.cc base64.hh unix_utility.cc logger.cc statbag.cc \
	qtype.cc sillyrecords.cc nsecrecords.cc base32.cc \
	$(am__append_28)
nsec3dig_LDADD = $(POLARSSL_LIBS) $(am__append_29)
toysdig_SOURCES = toysdig.cc sstuff.hh dnsparser.cc dnsparser.hh dnsrecords.cc dnswriter.cc dnslabeltext.cc dnswriter.hh \
	misc.cc misc.hh rcpgenerator.cc rcpgenerator.hh base64.cc base64.hh unix_utility.cc \
	logger.cc statbag.cc qtype.cc sillyrecords.cc nsecrecords.cc base32.cc \
	ednssubnet.cc ednssubnet.hh dns_random.cc randomhelper.cc 

toysdig_LDADD = $(POLARSSL_LIBS)
tsig_tests_SOURCES = tsig-tests.cc sstuff.hh dnsparser.cc dnsparser.hh \
	dnsrecords.cc dnswriter.cc dnslabeltext.cc dnswriter.hh \
	misc.cc misc.hh rcpgenerator.cc rcpgenerator.hh base64.cc \
	base64.hh unix_utility.cc logger.cc statbag.cc qtype.cc \
	sillyrecords.cc nsecrecords.cc base32.cc dnssecinfra.cc \
	resolver.cc arguments.cc dns_random.hh dns_random.cc \
	randomhelper.cc dns.cc $(am__append_30)
tsig_tests_LDADD = $(POLARSSL_LIBS) $(am__append_31)
speedtest_SOURCES = speedtest.cc dnsparser.cc dnsparser.hh dnsrecords.cc dnswriter.cc dnslabeltext.cc dnswriter.hh \
	misc.cc misc.hh rcpgenerator.cc rcpgenerator.hh base64.cc base64.hh unix_utility.cc \
	qtype.cc sillyrecords.cc logger.cc statbag.cc nsecrecords.cc base32.cc 

dnswasher_SOURCES = dnswasher.cc misc.cc unix_utility.cc qtype.cc \
	logger.cc statbag.cc  dnspcap.cc dnspcap.hh dnsparser.hh 

dnswasher_LDFLAGS = $(DYNLINKFLAGS) $(THREADFLAGS)
dnsbulktest_SOURCES = dnsbulktest.cc misc.cc unix_utility.cc qtype.cc logger.cc statbag.cc dnsparser.cc \
	dnsrecords.cc dnswriter.cc dnslabeltext.cc rcpgenerator.cc base32.cc base64.cc sillyrecords.cc nsecrecords.cc 

dnsbulktest_LDFLAGS = $(DYNLINKFLAGS) $(THREADFLAGS) $(BOOST_PROGRAM_OPTIONS_LDFLAGS)
dnsbulktest_LDADD = $(BOOST_PROGRAM_OPTIONS_LIBS)
dnsscan_SOURCES = dnsscan.cc misc.cc  qtype.cc anadns.hh \
	logger.cc statbag.cc  dnspcap.cc dnspcap.hh dnsparser.cc dnsrecords.cc dnsparser.hh  \
	rcpgenerator.cc rcpgenerator.hh base64.cc base64.hh dnswriter.cc dnslabeltext.cc dnswriter.hh \
	unix_utility.cc utility.hh sillyrecords.cc nsecrecords.cc base32.cc

dnsreplay_SOURCES = dnsreplay.cc misc.cc  qtype.cc anadns.hh \
	logger.cc statbag.cc  dnspcap.cc dnspcap.hh dnsparser.cc dnsrecords.cc dnsparser.hh  \
	rcpgenerator.cc rcpgenerator.hh base64.cc base64.hh dnswriter.cc dnslabeltext.cc dnswriter.hh \
	unix_utility.cc utility.hh sillyrecords.cc nsecrecords.cc base32.cc

dnsreplay_LDFLAGS = $(DYNLINKFLAGS) $(THREADFLAGS) $(BOOST_PROGRAM_OPTIONS_LDFLAGS)
dnsreplay_LDADD = $(BOOST_PROGRAM_OPTIONS_LIBS)
nproxy_SOURCES = nproxy.cc dnsparser.cc dnsrecords.cc dnsparser.hh  \
	rcpgenerator.cc rcpgenerator.hh base64.cc base64.hh dnswriter.cc dnslabeltext.cc dnswriter.hh \
	sillyrecords.cc selectmplexer.cc   mplexer.hh misc.cc nsecrecords.cc  unix_utility.cc qtype.cc \
	logger.cc statbag.cc base32.cc

nproxy_LDFLAGS = $(DYNLINKFLAGS) $(THREADFLAGS) $(BOOST_PROGRAM_OPTIONS_LDFLAGS)
nproxy_LDADD = $(BOOST_PROGRAM_OPTIONS_LIBS)
notify_SOURCES = notify.cc dnsparser.cc dnsrecords.cc dnsparser.hh  \
	rcpgenerator.cc rcpgenerator.hh base64.cc base64.hh dnswriter.cc dnslabeltext.cc dnswriter.hh \
	sillyrecords.cc selectmplexer.cc nsecrecords.cc base32.cc misc.cc unix_utility.cc \
	logger.cc qtype.cc statbag.cc dns.cc arguments.cc

notify_LDFLAGS = $(DYNLINKFLAGS) $(THREADFLAGS) $(BOOST_PROGRAM_OPTIONS_LDFLAGS)
notify_LDADD = $(BOOST_PROGRAM_OPTIONS_LIBS)
dnsscope_SOURCES = dnsscope.cc misc.cc unix_utility.cc qtype.cc \
	logger.cc statbag.cc  dnspcap.cc dnspcap.hh dnsparser.cc dnsrecords.cc \
	base64.cc base64.hh dnswriter.cc dnslabeltext.cc dnswriter.hh rcpgenerator.cc rcpgenerator.hh \
	utility.hh dnsparser.hh sillyrecords.cc nsecrecords.cc base32.cc dns.cc arguments.cc

dnsscope_LDFLAGS = $(DYNLINKFLAGS) $(THREADFLAGS) $(BOOST_PROGRAM_OPTIONS_LDFLAGS) 
dnsscope_LDADD = $(BOOST_PROGRAM_OPTIONS_LIBS) 
dnsgram_SOURCES = dnsgram.cc misc.cc unix_utility.cc qtype.cc \
	logger.cc statbag.cc  dnspcap.cc dnspcap.hh dnsparser.cc dnsrecords.cc \
	base64.cc base64.hh dnswriter.cc dnslabeltext.cc dnswriter.hh rcpgenerator.cc rcpgenerator.hh \
	utility.hh dnsparser.hh sillyrecords.cc nsecrecords.cc base32.cc

dnsdemog_SOURCES = dnsdemog.cc misc.cc unix_utility.cc qtype.cc \
	logger.cc statbag.cc  dnspcap.cc dnspcap.hh dnsparser.cc dnsrecords.cc \
	base64.cc base64.hh dnswriter.cc dnslabeltext.cc dnswriter.hh rcpgenerator.cc rcpgenerator.hh \
	utility.hh dnsparser.hh sillyrecords.cc nsecrecords.cc base32.cc

rec_control_SOURCES = rec_channel.cc rec_channel.hh rec_control.cc arguments.cc arguments.hh misc.cc qtype.cc \
	unix_utility.cc logger.cc statbag.cc

testrunner_SOURCES = testrunner.cc test-misc_hh.cc \
	test-nameserver_cc.cc test-dnsrecords_cc.cc test-base32_cc.cc \
	test-md5_hh.cc test-sha_hh.cc nameserver.cc misc.cc \
	unix_utility.cc logger.cc statbag.cc arguments.cc qtype.cc \
	dnspacket.cc dnswriter.cc base64.cc base32.cc dnsrecords.cc \
	dnslabeltext.cc dnsparser.cc rcpgenerator.cc ednssubnet.cc \
	nsecrecords.cc sillyrecords.cc dnssecinfra.cc \
	test-base64_cc.cc test-iputils_hh.cc test-dns_random_hh.cc \
	dns_random.cc test-rcpgenerator_cc.cc responsestats.cc \
	test-bindparser_cc.cc bindparser.cc bindlexer.c \
	test-zoneparser_tng_cc.cc zoneparser-tng.hh zoneparser-tng.cc \
	dns.cc $(am__append_32)
testrunner_LDFLAGS = $(DYNLINKFLAGS) $(THREADFLAGS) $(BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS)
testrunner_LDADD = $(POLARSSL_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIBS) \
	$(am__append_33)
pdns_recursor_SOURCES = syncres.cc resolver.hh misc.cc unix_utility.cc qtype.cc \
logger.cc statbag.cc arguments.cc  lwres.cc pdns_recursor.cc reczones.cc lwres.hh \
mtasker.hh syncres.hh recursor_cache.cc recursor_cache.hh dnsparser.cc \
dnswriter.cc dnslabeltext.cc dnswriter.hh dnsrecords.cc dnsrecords.hh rcpgenerator.cc rcpgenerator.hh \
base64.cc base64.hh zoneparser-tng.cc zoneparser-tng.hh rec_channel.cc rec_channel.hh \
rec_channel_rec.cc selectmplexer.cc epollmplexer.cc sillyrecords.cc htimer.cc htimer.hh \
dns_random.cc \
lua-pdns.cc lua-pdns.hh lua-recursor.cc lua-recursor.hh randomhelper.cc  \
recpacketcache.cc recpacketcache.hh dns.cc nsecrecords.cc base32.cc cachecleaner.hh \
ws-recursor.cc ws-recursor.hh ws-api.cc ws-api.hh webserver.cc webserver.hh \
json.cc json.hh version.hh version.cc responsestats.cc rec-carbon.cc ext/yahttp/yahttp/reqresp.cpp \
ext/yahttp/yahttp/router.cpp

pdns_recursor_LDFLAGS = $(LUA_LIBS)
pdns_recursor_LDADD = $(POLARSSL_LIBS) $(YAHTTP_LIBS)
pdns_control_SOURCES = dynloader.cc dynmessenger.cc  arguments.cc logger.cc statbag.cc \
misc.cc unix_utility.cc qtype.cc

pdns_control_LDFLAGS = $(THREADFLAGS)
@UNIT_TESTS_TRUE@TESTS_ENVIRONMENT = env BOOST_TEST_LOG_LEVEL=message
build_date = $(shell LC_TIME=C date '+%Y%m%d%H%M%S')
build_host = $(shell id -u -n)@$(shell hostname -f)
# Do the test in shell, so we don't confuse automake with ifeq/ifneq.
@RELEASE_BUILD_FALSE@pdns_version = $(shell test -z "$(git_version)" && echo UNKNOWN || echo "git-$(git_version)")
@RELEASE_BUILD_TRUE@pdns_version = $(PACKAGE_VERSION)
@RELEASE_BUILD_FALSE@dist_host = $(build_host)
@RELEASE_BUILD_TRUE@dist_host = $(DIST_HOST)
@RELEASE_BUILD_FALSE@git_version = $(shell git describe --always --dirty=+ 2>/dev/null)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .h .hh .l .lo .o .obj .yy
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign pdns/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign pdns/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
pdns: $(top_builddir)/config.status $(srcdir)/pdns.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
dnsbulktest$(EXEEXT): $(dnsbulktest_OBJECTS) $(dnsbulktest_DEPENDENCIES) $(EXTRA_dnsbulktest_DEPENDENCIES) 
	@rm -f dnsbulktest$(EXEEXT)
	$(AM_V_CXXLD)$(dnsbulktest_LINK) $(dnsbulktest_OBJECTS) $(dnsbulktest_LDADD) $(LIBS)
dnsdemog$(EXEEXT): $(dnsdemog_OBJECTS) $(dnsdemog_DEPENDENCIES) $(EXTRA_dnsdemog_DEPENDENCIES) 
	@rm -f dnsdemog$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dnsdemog_OBJECTS) $(dnsdemog_LDADD) $(LIBS)
dnsdist$(EXEEXT): $(dnsdist_OBJECTS) $(dnsdist_DEPENDENCIES) $(EXTRA_dnsdist_DEPENDENCIES) 
	@rm -f dnsdist$(EXEEXT)
	$(AM_V_CXXLD)$(dnsdist_LINK) $(dnsdist_OBJECTS) $(dnsdist_LDADD) $(LIBS)
dnsgram$(EXEEXT): $(dnsgram_OBJECTS) $(dnsgram_DEPENDENCIES) $(EXTRA_dnsgram_DEPENDENCIES) 
	@rm -f dnsgram$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dnsgram_OBJECTS) $(dnsgram_LDADD) $(LIBS)
dnsreplay$(EXEEXT): $(dnsreplay_OBJECTS) $(dnsreplay_DEPENDENCIES) $(EXTRA_dnsreplay_DEPENDENCIES) 
	@rm -f dnsreplay$(EXEEXT)
	$(AM_V_CXXLD)$(dnsreplay_LINK) $(dnsreplay_OBJECTS) $(dnsreplay_LDADD) $(LIBS)
dnsscan$(EXEEXT): $(dnsscan_OBJECTS) $(dnsscan_DEPENDENCIES) $(EXTRA_dnsscan_DEPENDENCIES) 
	@rm -f dnsscan$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dnsscan_OBJECTS) $(dnsscan_LDADD) $(LIBS)
dnsscope$(EXEEXT): $(dnsscope_OBJECTS) $(dnsscope_DEPENDENCIES) $(EXTRA_dnsscope_DEPENDENCIES) 
	@rm -f dnsscope$(EXEEXT)
	$(AM_V_CXXLD)$(dnsscope_LINK) $(dnsscope_OBJECTS) $(dnsscope_LDADD) $(LIBS)
dnstcpbench$(EXEEXT): $(dnstcpbench_OBJECTS) $(dnstcpbench_DEPENDENCIES) $(EXTRA_dnstcpbench_DEPENDENCIES) 
	@rm -f dnstcpbench$(EXEEXT)
	$(AM_V_CXXLD)$(dnstcpbench_LINK) $(dnstcpbench_OBJECTS) $(dnstcpbench_LDADD) $(LIBS)
dnswasher$(EXEEXT): $(dnswasher_OBJECTS) $(dnswasher_DEPENDENCIES) $(EXTRA_dnswasher_DEPENDENCIES) 
	@rm -f dnswasher$(EXEEXT)
	$(AM_V_CXXLD)$(dnswasher_LINK) $(dnswasher_OBJECTS) $(dnswasher_LDADD) $(LIBS)
notify$(EXEEXT): $(notify_OBJECTS) $(notify_DEPENDENCIES) $(EXTRA_notify_DEPENDENCIES) 
	@rm -f notify$(EXEEXT)
	$(AM_V_CXXLD)$(notify_LINK) $(notify_OBJECTS) $(notify_LDADD) $(LIBS)
nproxy$(EXEEXT): $(nproxy_OBJECTS) $(nproxy_DEPENDENCIES) $(EXTRA_nproxy_DEPENDENCIES) 
	@rm -f nproxy$(EXEEXT)
	$(AM_V_CXXLD)$(nproxy_LINK) $(nproxy_OBJECTS) $(nproxy_LDADD) $(LIBS)
nsec3dig$(EXEEXT): $(nsec3dig_OBJECTS) $(nsec3dig_DEPENDENCIES) $(EXTRA_nsec3dig_DEPENDENCIES) 
	@rm -f nsec3dig$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nsec3dig_OBJECTS) $(nsec3dig_LDADD) $(LIBS)
pdns_control$(EXEEXT): $(pdns_control_OBJECTS) $(pdns_control_DEPENDENCIES) $(EXTRA_pdns_control_DEPENDENCIES) 
	@rm -f pdns_control$(EXEEXT)
	$(AM_V_CXXLD)$(pdns_control_LINK) $(pdns_control_OBJECTS) $(pdns_control_LDADD) $(LIBS)
ext/yahttp/yahttp/$(am__dirstamp):
	@$(MKDIR_P) ext/yahttp/yahttp
	@: > ext/yahttp/yahttp/$(am__dirstamp)
ext/yahttp/yahttp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ext/yahttp/yahttp/$(DEPDIR)
	@: > ext/yahttp/yahttp/$(DEPDIR)/$(am__dirstamp)
ext/yahttp/yahttp/reqresp.$(OBJEXT):  \
	ext/yahttp/yahttp/$(am__dirstamp) \
	ext/yahttp/yahttp/$(DEPDIR)/$(am__dirstamp)
ext/yahttp/yahttp/router.$(OBJEXT): ext/yahttp/yahttp/$(am__dirstamp) \
	ext/yahttp/yahttp/$(DEPDIR)/$(am__dirstamp)
pdns_recursor$(EXEEXT): $(pdns_recursor_OBJECTS) $(pdns_recursor_DEPENDENCIES) $(EXTRA_pdns_recursor_DEPENDENCIES) 
	@rm -f pdns_recursor$(EXEEXT)
	$(AM_V_CXXLD)$(pdns_recursor_LINK) $(pdns_recursor_OBJECTS) $(pdns_recursor_LDADD) $(LIBS)
backends/gsql/$(am__dirstamp):
	@$(MKDIR_P) backends/gsql
	@: > backends/gsql/$(am__dirstamp)
backends/gsql/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) backends/gsql/$(DEPDIR)
	@: > backends/gsql/$(DEPDIR)/$(am__dirstamp)
backends/gsql/gsqlbackend.$(OBJEXT): backends/gsql/$(am__dirstamp) \
	backends/gsql/$(DEPDIR)/$(am__dirstamp)
pdns_server$(EXEEXT): $(pdns_server_OBJECTS) $(pdns_server_DEPENDENCIES) $(EXTRA_pdns_server_DEPENDENCIES) 
	@rm -f pdns_server$(EXEEXT)
	$(AM_V_CXXLD)$(pdns_server_LINK) $(pdns_server_OBJECTS) $(pdns_server_LDADD) $(LIBS)
pdnssec$(EXEEXT): $(pdnssec_OBJECTS) $(pdnssec_DEPENDENCIES) $(EXTRA_pdnssec_DEPENDENCIES) 
	@rm -f pdnssec$(EXEEXT)
	$(AM_V_CXXLD)$(pdnssec_LINK) $(pdnssec_OBJECTS) $(pdnssec_LDADD) $(LIBS)
rec_control$(EXEEXT): $(rec_control_OBJECTS) $(rec_control_DEPENDENCIES) $(EXTRA_rec_control_DEPENDENCIES) 
	@rm -f rec_control$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rec_control_OBJECTS) $(rec_control_LDADD) $(LIBS)
saxfr$(EXEEXT): $(saxfr_OBJECTS) $(saxfr_DEPENDENCIES) $(EXTRA_saxfr_DEPENDENCIES) 
	@rm -f saxfr$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(saxfr_OBJECTS) $(saxfr_LDADD) $(LIBS)
sdig$(EXEEXT): $(sdig_OBJECTS) $(sdig_DEPENDENCIES) $(EXTRA_sdig_DEPENDENCIES) 
	@rm -f sdig$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sdig_OBJECTS) $(sdig_LDADD) $(LIBS)
speedtest$(EXEEXT): $(speedtest_OBJECTS) $(speedtest_DEPENDENCIES) $(EXTRA_speedtest_DEPENDENCIES) 
	@rm -f speedtest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(speedtest_OBJECTS) $(speedtest_LDADD) $(LIBS)
testrunner$(EXEEXT): $(testrunner_OBJECTS) $(testrunner_DEPENDENCIES) $(EXTRA_testrunner_DEPENDENCIES) 
	@rm -f testrunner$(EXEEXT)
	$(AM_V_CXXLD)$(testrunner_LINK) $(testrunner_OBJECTS) $(testrunner_LDADD) $(LIBS)
toysdig$(EXEEXT): $(toysdig_OBJECTS) $(toysdig_DEPENDENCIES) $(EXTRA_toysdig_DEPENDENCIES) 
	@rm -f toysdig$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(toysdig_OBJECTS) $(toysdig_LDADD) $(LIBS)
tsig-tests$(EXEEXT): $(tsig_tests_OBJECTS) $(tsig_tests_DEPENDENCIES) $(EXTRA_tsig_tests_DEPENDENCIES) 
	@rm -f tsig-tests$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tsig_tests_OBJECTS) $(tsig_tests_LDADD) $(LIBS)
bindparser.h: bindparser.cc
	@if test ! -f $@; then rm -f bindparser.cc; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) bindparser.cc; else :; fi
zone2json$(EXEEXT): $(zone2json_OBJECTS) $(zone2json_DEPENDENCIES) $(EXTRA_zone2json_DEPENDENCIES) 
	@rm -f zone2json$(EXEEXT)
	$(AM_V_CXXLD)$(zone2json_LINK) $(zone2json_OBJECTS) $(zone2json_LDADD) $(LIBS)
zone2ldap$(EXEEXT): $(zone2ldap_OBJECTS) $(zone2ldap_DEPENDENCIES) $(EXTRA_zone2ldap_DEPENDENCIES) 
	@rm -f zone2ldap$(EXEEXT)
	$(AM_V_CXXLD)$(zone2ldap_LINK) $(zone2ldap_OBJECTS) $(zone2ldap_LDADD) $(LIBS)
zone2lmdb$(EXEEXT): $(zone2lmdb_OBJECTS) $(zone2lmdb_DEPENDENCIES) $(EXTRA_zone2lmdb_DEPENDENCIES) 
	@rm -f zone2lmdb$(EXEEXT)
	$(AM_V_CXXLD)$(zone2lmdb_LINK) $(zone2lmdb_OBJECTS) $(zone2lmdb_LDADD) $(LIBS)
zone2sql$(EXEEXT): $(zone2sql_OBJECTS) $(zone2sql_DEPENDENCIES) $(EXTRA_zone2sql_DEPENDENCIES) 
	@rm -f zone2sql$(EXEEXT)
	$(AM_V_CXXLD)$(zone2sql_LINK) $(zone2sql_OBJECTS) $(zone2sql_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f backends/gsql/gsqlbackend.$(OBJEXT)
	-rm -f ext/yahttp/yahttp/reqresp.$(OBJEXT)
	-rm -f ext/yahttp/yahttp/router.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arguments.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/auth-carbon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bindlexer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bindparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/botan110signers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/botan18signers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/botansigners.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/common_startup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/communicator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cryptoppsigners.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dbdnsseckeeper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsbackend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsbulktest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsdemog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsdist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsgram.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnslabeltext.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnspacket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnspcap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsproxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsrecords.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsreplay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsscan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsscope.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnssecinfra.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnssecsigner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnstcpbench.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnswasher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnswriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynhandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynlistener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynloader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynmessenger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ednssubnet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epollmplexer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/htimer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iputils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/json.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/logger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua-auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua-pdns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua-recursor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lwres.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mastercommunicator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/misc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nameserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/notify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nproxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nsec3dig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nsecrecords.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/packetcache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/packethandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pdns_recursor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pdnssec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pkcs11signers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polarrsakeyinfra.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qtype.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/randomhelper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rcpgenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rec-carbon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rec_channel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rec_channel_rec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rec_control.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/receiver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/recpacketcache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/recursor_cache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reczones.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resolver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/responsestats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rfc2136handler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/saxfr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sdig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/selectmplexer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialtweaker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signingpipe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sillyrecords.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slavecommunicator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/speedtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ssqlite3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statbag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/syncres.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcpreceiver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-base32_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-base64_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bindparser_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-dns_random_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-dnsrecords_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-iputils_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-md5_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-misc_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-nameserver_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-rcpgenerator_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-sha_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-zoneparser_tng_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testrunner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toysdig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsig-tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ueberbackend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unix_semaphore.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unix_utility.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/webserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ws-api.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ws-auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ws-recursor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zone2json.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zone2ldap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zone2lmdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zone2sql.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zoneparser-tng.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@backends/gsql/$(DEPDIR)/gsqlbackend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ext/yahttp/yahttp/$(DEPDIR)/reqresp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ext/yahttp/yahttp/$(DEPDIR)/router.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

.l.c:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.yy.cc:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h $*.h y.output $*.output -- $(YACCCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-sysconfDATA: $(sysconf_DATA)
	@$(NORMAL_INSTALL)
	@list='$(sysconf_DATA)'; test -n "$(sysconfdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sysconfdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sysconfdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(sysconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(sysconfdir)" || exit $$?; \
	done

uninstall-sysconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sysconf_DATA)'; test -n "$(sysconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(sysconfdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
@UNIT_TESTS_TRUE@check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(sysconfdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f backends/gsql/$(DEPDIR)/$(am__dirstamp)
	-rm -f backends/gsql/$(am__dirstamp)
	-rm -f ext/yahttp/yahttp/$(DEPDIR)/$(am__dirstamp)
	-rm -f ext/yahttp/yahttp/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f bindlexer.c
	-rm -f bindparser.cc
	-rm -f bindparser.h
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) backends/gsql/$(DEPDIR) ext/yahttp/yahttp/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-sbinPROGRAMS \
	install-sysconfDATA

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) backends/gsql/$(DEPDIR) ext/yahttp/yahttp/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-sbinPROGRAMS \
	uninstall-sysconfDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check \
	check-am ctags-recursive install install-am install-strip \
	tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-TESTS check-am check-local clean \
	clean-binPROGRAMS clean-generic clean-libtool \
	clean-sbinPROGRAMS ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-sbinPROGRAMS install-strip \
	install-sysconfDATA installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-sbinPROGRAMS uninstall-sysconfDATA

@UNIT_TESTS_FALSE@check-local:
@UNIT_TESTS_FALSE@	@echo "Unit tests are not enabled"
@UNIT_TESTS_FALSE@	@echo "Run ./configure --enable-unit-tests"

dnslabeltext.cc: dnslabeltext.rl
	ragel dnslabeltext.rl -o dnslabeltext.cc

bind-dnssec.schema.sqlite3.sql.h: bind-dnssec.schema.sqlite3.sql
	( echo 'static char sqlCreate[] __attribute__((unused))=' ; sed 's/$$/"/g' bind-dnssec.schema.sqlite3.sql | sed 's/^/"/g'  ; echo ';' ) > $@

# for bindparser.h/hh
.hh.h:
	cp $< $@

version.o: version_generated.h

.PHONY: version_generated.h
version_generated.h:
	@echo '#ifndef VERSION_GENERATED_H' > $@
	@echo '#define VERSION_GENERATED_H' >> $@
	@echo '#define PDNS_VERSION "$(pdns_version)"' >> $@
	@echo '#define DIST_HOST "$(dist_host)"' >> $@
	@echo '#define BUILD_DATE "$(build_date)"' >> $@
	@echo '#define BUILD_HOST "$(build_host)"' >> $@
	@echo '#endif //!VERSION_GENERATED_H' >> $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
