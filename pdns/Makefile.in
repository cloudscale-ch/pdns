# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@BOTAN110_TRUE@am__append_1 = $(BOTAN110_CFLAGS)
@BOTAN18_TRUE@am__append_2 = $(BOTAN18_CFLAGS)
@PKCS11_TRUE@am__append_3 = $(P11KIT1_CFLAGS)
@SQLITE3_TRUE@am__append_4 = $(SQLITE3_CFLAGS)
@LUA_TRUE@am__append_5 = $(LUA_CFLAGS)
@GSS_TSIG_TRUE@am__append_6 = $(GSS_CFLAGS)
sbin_PROGRAMS = pdns_server$(EXEEXT)
bin_PROGRAMS = pdns_control$(EXEEXT) pdnssec$(EXEEXT) \
	zone2sql$(EXEEXT) zone2json$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4)
@TOOLS_TRUE@am__append_7 = \
@TOOLS_TRUE@	dnsbulktest \
@TOOLS_TRUE@	dnsgram \
@TOOLS_TRUE@	dnsreplay \
@TOOLS_TRUE@	dnsscan \
@TOOLS_TRUE@	dnsscope \
@TOOLS_TRUE@	dnstcpbench \
@TOOLS_TRUE@	dnswasher \
@TOOLS_TRUE@	dumresp \
@TOOLS_TRUE@	notify \
@TOOLS_TRUE@	nproxy \
@TOOLS_TRUE@	nsec3dig \
@TOOLS_TRUE@	saxfr \
@TOOLS_TRUE@	sdig

@HAVE_RECVMMSG_TRUE@@TOOLS_TRUE@am__append_8 = calidns
EXTRA_PROGRAMS = calidns$(EXEEXT) dnsbulktest$(EXEEXT) \
	dnsdemog$(EXEEXT) dnsdist$(EXEEXT) dnsgram$(EXEEXT) \
	dnsreplay$(EXEEXT) dnsscan$(EXEEXT) dnsscope$(EXEEXT) \
	dnstcpbench$(EXEEXT) dnswasher$(EXEEXT) dumresp$(EXEEXT) \
	notify$(EXEEXT) nproxy$(EXEEXT) nsec3dig$(EXEEXT) \
	pdns_recursor$(EXEEXT) rec_control$(EXEEXT) saxfr$(EXEEXT) \
	sdig$(EXEEXT) speedtest$(EXEEXT) testrunner$(EXEEXT) \
	toysdig$(EXEEXT) tsig-tests$(EXEEXT) zone2ldap$(EXEEXT) \
	zone2lmdb$(EXEEXT)
@BOTAN110_TRUE@am__append_9 = botan110signers.cc botansigners.cc
@BOTAN110_TRUE@am__append_10 = $(BOTAN110_LIBS)
@BOTAN18_TRUE@am__append_11 = botan18signers.cc botansigners.cc
@BOTAN18_TRUE@am__append_12 = $(BOTAN18_LIBS)
@CRYPTOPP_TRUE@am__append_13 = cryptoppsigners.cc
@CRYPTOPP_TRUE@am__append_14 = $(CRYPTOPP_LIBS)
@LIBSODIUM_TRUE@am__append_15 = sodiumsigners.cc
@LIBSODIUM_TRUE@am__append_16 = $(LIBSODIUM_LIBS)
@SQLITE3_TRUE@am__append_17 = ssqlite3.cc ssqlite3.hh
@SQLITE3_TRUE@am__append_18 = $(SQLITE3_LIBS)
@ORACLE_TRUE@am__append_19 = $(ORACLE_LIBS)
@PKCS11_TRUE@am__append_20 = pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__append_21 = $(P11KIT1_LIBS)
@LUA_TRUE@am__append_22 = $(LUA_LIBS)
@GSS_TSIG_TRUE@am__append_23 = $(GSS_LIBS)
@BOTAN110_TRUE@am__append_24 = botan110signers.cc botansigners.cc
@BOTAN110_TRUE@am__append_25 = $(BOTAN110_LIBS)
@BOTAN18_TRUE@am__append_26 = botan18signers.cc botansigners.cc
@BOTAN18_TRUE@am__append_27 = $(BOTAN18_LIBS)
@CRYPTOPP_TRUE@am__append_28 = cryptoppsigners.cc
@CRYPTOPP_TRUE@am__append_29 = $(CRYPTOPP_LIBS)
@LIBSODIUM_TRUE@am__append_30 = sodiumsigners.cc
@LIBSODIUM_TRUE@am__append_31 = $(LIBSODIUM_LIBS)
@SQLITE3_TRUE@am__append_32 = ssqlite3.cc ssqlite3.hh
@SQLITE3_TRUE@am__append_33 = $(SQLITE3_LIBS)
@ORACLE_TRUE@am__append_34 = $(ORACLE_LIBS)
@PKCS11_TRUE@am__append_35 = pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__append_36 = $(P11KIT1_LIBS)
@GSS_TSIG_TRUE@am__append_37 = $(GSS_LIBS)

# pkglib_LTLIBRARIES = iputils.la
# iputils_la_SOURCES = lua-iputils.cc
# iputils_la_LDFLAGS= -module -avoid-version
@LDAP_TRUE@am__append_38 = zone2ldap
@LMDB_TRUE@am__append_39 = zone2lmdb
@PKCS11_TRUE@am__append_40 = pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__append_41 = $(P11KIT1_LIBS)
@GSS_TSIG_TRUE@am__append_42 = $(GSS_LIBS)
@PKCS11_TRUE@am__append_43 = pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__append_44 = $(P11KIT1_LIBS)
@GSS_TSIG_TRUE@am__append_45 = $(GSS_LIBS)
@PKCS11_TRUE@am__append_46 = pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__append_47 = $(P11KIT1_LIBS)
@GSS_TSIG_TRUE@am__append_48 = $(GSS_LIBS)
@PKCS11_TRUE@am__append_49 = pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__append_50 = $(P11KIT1_LIBS)
@LUA_TRUE@am__append_51 = $(LUA_LIBS)
@HAVE_FREEBSD_TRUE@am__append_52 = kqueuemplexer.cc
@HAVE_LINUX_TRUE@am__append_53 = epollmplexer.cc
@HAVE_SOLARIS_TRUE@am__append_54 = \
@HAVE_SOLARIS_TRUE@	devpollmplexer.cc \
@HAVE_SOLARIS_TRUE@	portsmplexer.cc

@UNIT_TESTS_TRUE@TESTS = testrunner$(EXEEXT)
subdir = pdns
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(srcdir)/pdns.init.in bindlexer.c bindparser.hh bindparser.cc \
	$(top_srcdir)/build-aux/depcomp $(top_srcdir)/build-aux/ylwrap \
	$(top_srcdir)/build-aux/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/ax_lib_readline.m4 $(top_srcdir)/m4/boost.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pdns_check_bison.m4 \
	$(top_srcdir)/m4/pdns_check_cdb.m4 \
	$(top_srcdir)/m4/pdns_check_clock_gettime.m4 \
	$(top_srcdir)/m4/pdns_check_curl_program.m4 \
	$(top_srcdir)/m4/pdns_check_flex.m4 \
	$(top_srcdir)/m4/pdns_check_ldap.m4 \
	$(top_srcdir)/m4/pdns_check_libsodium.m4 \
	$(top_srcdir)/m4/pdns_check_linkchecker.m4 \
	$(top_srcdir)/m4/pdns_check_mkdocs.m4 \
	$(top_srcdir)/m4/pdns_check_opendbx.m4 \
	$(top_srcdir)/m4/pdns_check_pandoc.m4 \
	$(top_srcdir)/m4/pdns_check_ragel.m4 \
	$(top_srcdir)/m4/pdns_check_readline.m4 \
	$(top_srcdir)/m4/pdns_check_sqlite3.m4 \
	$(top_srcdir)/m4/pdns_d_fortify_source.m4 \
	$(top_srcdir)/m4/pdns_enable_botan.m4 \
	$(top_srcdir)/m4/pdns_enable_coverage.m4 \
	$(top_srcdir)/m4/pdns_enable_gss_tsig.m4 \
	$(top_srcdir)/m4/pdns_enable_p11kit.m4 \
	$(top_srcdir)/m4/pdns_enable_remotebackend_zeromq.m4 \
	$(top_srcdir)/m4/pdns_enable_reproducible.m4 \
	$(top_srcdir)/m4/pdns_enable_sanitizers.m4 \
	$(top_srcdir)/m4/pdns_enable_unit_tests.m4 \
	$(top_srcdir)/m4/pdns_enable_verbose_logging.m4 \
	$(top_srcdir)/m4/pdns_param_ssp_buffer_size.m4 \
	$(top_srcdir)/m4/pdns_pie.m4 $(top_srcdir)/m4/pdns_relro.m4 \
	$(top_srcdir)/m4/pdns_stack_protector.m4 \
	$(top_srcdir)/m4/pdns_with_cryptopp.m4 \
	$(top_srcdir)/m4/pdns_with_geo.m4 \
	$(top_srcdir)/m4/pdns_with_lmdb.m4 \
	$(top_srcdir)/m4/pdns_with_lua.m4 \
	$(top_srcdir)/m4/pdns_with_luajit.m4 \
	$(top_srcdir)/m4/pdns_with_mysql.m4 \
	$(top_srcdir)/m4/pdns_with_oracle.m4 \
	$(top_srcdir)/m4/pdns_with_postgresql.m4 \
	$(top_srcdir)/m4/pdns_with_sqlite3.m4 \
	$(top_srcdir)/m4/pdns_with_system_mbedtls.m4 \
	$(top_srcdir)/m4/tm-gmtoff.m4 $(top_srcdir)/m4/warnings.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = pdns.init
CONFIG_CLEAN_VPATH_FILES =
@TOOLS_TRUE@am__EXEEXT_1 = dnsbulktest$(EXEEXT) dnsgram$(EXEEXT) \
@TOOLS_TRUE@	dnsreplay$(EXEEXT) dnsscan$(EXEEXT) \
@TOOLS_TRUE@	dnsscope$(EXEEXT) dnstcpbench$(EXEEXT) \
@TOOLS_TRUE@	dnswasher$(EXEEXT) dumresp$(EXEEXT) \
@TOOLS_TRUE@	notify$(EXEEXT) nproxy$(EXEEXT) nsec3dig$(EXEEXT) \
@TOOLS_TRUE@	saxfr$(EXEEXT) sdig$(EXEEXT)
@HAVE_RECVMMSG_TRUE@@TOOLS_TRUE@am__EXEEXT_2 = calidns$(EXEEXT)
@LDAP_TRUE@am__EXEEXT_3 = zone2ldap$(EXEEXT)
@LMDB_TRUE@am__EXEEXT_4 = zone2lmdb$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" \
	"$(DESTDIR)$(sysconfdir)"
PROGRAMS = $(bin_PROGRAMS) $(sbin_PROGRAMS)
am_calidns_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	calidns.$(OBJEXT) dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) \
	dnsparser.$(OBJEXT) dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	iputils.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	nsecrecords.$(OBJEXT) qtype.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	sillyrecords.$(OBJEXT) statbag.$(OBJEXT) \
	unix_utility.$(OBJEXT)
calidns_OBJECTS = $(am_calidns_OBJECTS)
am__DEPENDENCIES_1 =
calidns_DEPENDENCIES = $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
calidns_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(calidns_LDFLAGS) $(LDFLAGS) -o $@
am_dnsbulktest_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	dnsbulktest.$(OBJEXT) dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) \
	dnsparser.$(OBJEXT) dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	logger.$(OBJEXT) misc.$(OBJEXT) nsecrecords.$(OBJEXT) \
	qtype.$(OBJEXT) rcpgenerator.$(OBJEXT) sillyrecords.$(OBJEXT) \
	statbag.$(OBJEXT) unix_utility.$(OBJEXT)
dnsbulktest_OBJECTS = $(am_dnsbulktest_OBJECTS)
dnsbulktest_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dnsbulktest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dnsbulktest_LDFLAGS) $(LDFLAGS) -o $@
am_dnsdemog_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	dnsdemog.$(OBJEXT) dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) \
	dnsparser.$(OBJEXT) dnspcap.$(OBJEXT) dnsrecords.$(OBJEXT) \
	dnswriter.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	nsecrecords.$(OBJEXT) qtype.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	sillyrecords.$(OBJEXT) statbag.$(OBJEXT) \
	unix_utility.$(OBJEXT)
dnsdemog_OBJECTS = $(am_dnsdemog_OBJECTS)
dnsdemog_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__dirstamp = $(am__leading_dot)dirstamp
am_dnsdist_OBJECTS = base32.$(OBJEXT) dnsdist.$(OBJEXT) \
	dnsdist-carbon.$(OBJEXT) dnsdist-lua.$(OBJEXT) \
	dnsdist-tcp.$(OBJEXT) dnsdist-web.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) dnswriter.$(OBJEXT) \
	iputils.$(OBJEXT) misc.$(OBJEXT) qtype.$(OBJEXT) \
	sodcrypto.$(OBJEXT) ../ext/json11/json11.$(OBJEXT)
dnsdist_OBJECTS = $(am_dnsdist_OBJECTS)
dnsdist_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
dnsdist_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dnsdist_LDFLAGS) $(LDFLAGS) -o $@
am_dnsgram_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	dnsgram.$(OBJEXT) dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) \
	dnsparser.$(OBJEXT) dnspcap.$(OBJEXT) dnsrecords.$(OBJEXT) \
	dnswriter.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	nsecrecords.$(OBJEXT) qtype.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	sillyrecords.$(OBJEXT) statbag.$(OBJEXT) \
	unix_utility.$(OBJEXT)
dnsgram_OBJECTS = $(am_dnsgram_OBJECTS)
dnsgram_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_dnsreplay_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnspcap.$(OBJEXT) dnsrecords.$(OBJEXT) dnsreplay.$(OBJEXT) \
	dnswriter.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	nsecrecords.$(OBJEXT) qtype.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	sillyrecords.$(OBJEXT) statbag.$(OBJEXT) \
	unix_utility.$(OBJEXT)
dnsreplay_OBJECTS = $(am_dnsreplay_OBJECTS)
dnsreplay_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dnsreplay_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dnsreplay_LDFLAGS) $(LDFLAGS) -o $@
am_dnsscan_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnspcap.$(OBJEXT) dnsrecords.$(OBJEXT) dnsscan.$(OBJEXT) \
	dnswriter.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	nsecrecords.$(OBJEXT) qtype.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	sillyrecords.$(OBJEXT) statbag.$(OBJEXT) \
	unix_utility.$(OBJEXT)
dnsscan_OBJECTS = $(am_dnsscan_OBJECTS)
dnsscan_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_dnsscope_OBJECTS = arguments.$(OBJEXT) base32.$(OBJEXT) \
	base64.$(OBJEXT) dns.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	dnsname.$(OBJEXT) dnsparser.$(OBJEXT) dnspcap.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnsscope.$(OBJEXT) dnswriter.$(OBJEXT) \
	logger.$(OBJEXT) misc.$(OBJEXT) nsecrecords.$(OBJEXT) \
	qtype.$(OBJEXT) rcpgenerator.$(OBJEXT) sillyrecords.$(OBJEXT) \
	statbag.$(OBJEXT) unix_utility.$(OBJEXT)
dnsscope_OBJECTS = $(am_dnsscope_OBJECTS)
dnsscope_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dnsscope_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dnsscope_LDFLAGS) $(LDFLAGS) -o $@
am_dnstcpbench_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnstcpbench.$(OBJEXT) dnswriter.$(OBJEXT) \
	logger.$(OBJEXT) misc.$(OBJEXT) nsecrecords.$(OBJEXT) \
	qtype.$(OBJEXT) rcpgenerator.$(OBJEXT) sillyrecords.$(OBJEXT) \
	statbag.$(OBJEXT) unix_utility.$(OBJEXT)
dnstcpbench_OBJECTS = $(am_dnstcpbench_OBJECTS)
dnstcpbench_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
dnstcpbench_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dnstcpbench_LDFLAGS) $(LDFLAGS) -o $@
am_dnswasher_OBJECTS = dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) \
	dnspcap.$(OBJEXT) dnswasher.$(OBJEXT) logger.$(OBJEXT) \
	misc.$(OBJEXT) qtype.$(OBJEXT) statbag.$(OBJEXT) \
	unix_utility.$(OBJEXT)
dnswasher_OBJECTS = $(am_dnswasher_OBJECTS)
dnswasher_LDADD = $(LDADD)
am_dumresp_OBJECTS = dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) \
	dumresp.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	statbag.$(OBJEXT) unix_utility.$(OBJEXT) qtype.$(OBJEXT)
dumresp_OBJECTS = $(am_dumresp_OBJECTS)
dumresp_LDADD = $(LDADD)
am_notify_OBJECTS = arguments.$(OBJEXT) base32.$(OBJEXT) \
	base64.$(OBJEXT) dns.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	dnsname.$(OBJEXT) dnsparser.$(OBJEXT) dnsrecords.$(OBJEXT) \
	dnswriter.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	notify.$(OBJEXT) nsecrecords.$(OBJEXT) qtype.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) selectmplexer.$(OBJEXT) \
	sillyrecords.$(OBJEXT) statbag.$(OBJEXT) \
	unix_utility.$(OBJEXT)
notify_OBJECTS = $(am_notify_OBJECTS)
notify_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
notify_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(notify_LDFLAGS) $(LDFLAGS) -o $@
am_nproxy_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) logger.$(OBJEXT) \
	misc.$(OBJEXT) nproxy.$(OBJEXT) nsecrecords.$(OBJEXT) \
	qtype.$(OBJEXT) rcpgenerator.$(OBJEXT) selectmplexer.$(OBJEXT) \
	sillyrecords.$(OBJEXT) statbag.$(OBJEXT) \
	unix_utility.$(OBJEXT)
nproxy_OBJECTS = $(am_nproxy_OBJECTS)
nproxy_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
nproxy_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(nproxy_LDFLAGS) $(LDFLAGS) -o $@
am__nsec3dig_SOURCES_DIST = base32.cc base64.cc base64.hh dnsname.cc \
	dnsname.hh dnslabeltext.cc dnsparser.cc dnsparser.hh \
	dnsrecords.cc dnssecinfra.cc dnswriter.cc dnswriter.hh \
	gss_context.cc gss_context.hh logger.cc mbedtlscompat.hh \
	misc.cc misc.hh nsec3dig.cc nsecrecords.cc qtype.cc \
	rcpgenerator.cc rcpgenerator.hh sillyrecords.cc sstuff.hh \
	statbag.cc unix_utility.cc pkcs11signers.cc pkcs11signers.hh
@PKCS11_TRUE@am__objects_1 = pkcs11signers.$(OBJEXT)
am_nsec3dig_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	dnsname.$(OBJEXT) dnslabeltext.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnssecinfra.$(OBJEXT) dnswriter.$(OBJEXT) \
	gss_context.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	nsec3dig.$(OBJEXT) nsecrecords.$(OBJEXT) qtype.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) sillyrecords.$(OBJEXT) \
	statbag.$(OBJEXT) unix_utility.$(OBJEXT) $(am__objects_1)
nsec3dig_OBJECTS = $(am_nsec3dig_OBJECTS)
@PKCS11_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
@GSS_TSIG_TRUE@am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
nsec3dig_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3)
am_pdns_control_OBJECTS = arguments.$(OBJEXT) dynloader.$(OBJEXT) \
	dynmessenger.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	qtype.$(OBJEXT) statbag.$(OBJEXT) unix_utility.$(OBJEXT) \
	dnsname.$(OBJEXT) dnslabeltext.$(OBJEXT)
pdns_control_OBJECTS = $(am_pdns_control_OBJECTS)
pdns_control_LDADD = $(LDADD)
am__pdns_recursor_SOURCES_DIST = arguments.cc base32.cc base64.cc \
	base64.hh cachecleaner.hh dns.cc dns_random.cc dnslabeltext.cc \
	dnsname.cc dnsname.hh dnsparser.cc dnsrecords.cc dnsrecords.hh \
	dnswriter.cc dnswriter.hh iputils.cc json.cc json.hh logger.cc \
	lua-pdns.cc lua-pdns.hh lua-iputils.cc lua-recursor.cc \
	lua-recursor.hh lwres.cc lwres.hh mbedtlscompat.hh misc.cc \
	mtasker.hh nsecrecords.cc pdns_recursor.cc pubsuffix.cc \
	qtype.cc randomhelper.cc rcpgenerator.cc rcpgenerator.hh \
	rec-carbon.cc rec_channel.cc rec_channel.hh rec_channel_rec.cc \
	recpacketcache.cc recpacketcache.hh recursor_cache.cc \
	recursor_cache.hh reczones.cc resolver.hh responsestats.cc \
	secpoll-recursor.cc secpoll-recursor.hh selectmplexer.cc \
	sillyrecords.cc statbag.cc syncres.cc syncres.hh \
	unix_utility.cc version.cc version.hh webserver.cc \
	webserver.hh ws-api.cc ws-api.hh ws-recursor.cc ws-recursor.hh \
	zoneparser-tng.cc zoneparser-tng.hh kqueuemplexer.cc \
	epollmplexer.cc devpollmplexer.cc portsmplexer.cc
@HAVE_FREEBSD_TRUE@am__objects_2 = kqueuemplexer.$(OBJEXT)
@HAVE_LINUX_TRUE@am__objects_3 = epollmplexer.$(OBJEXT)
@HAVE_SOLARIS_TRUE@am__objects_4 = devpollmplexer.$(OBJEXT) \
@HAVE_SOLARIS_TRUE@	portsmplexer.$(OBJEXT)
am_pdns_recursor_OBJECTS = arguments.$(OBJEXT) base32.$(OBJEXT) \
	base64.$(OBJEXT) dns.$(OBJEXT) dns_random.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) iputils.$(OBJEXT) \
	json.$(OBJEXT) logger.$(OBJEXT) lua-pdns.$(OBJEXT) \
	lua-iputils.$(OBJEXT) lua-recursor.$(OBJEXT) lwres.$(OBJEXT) \
	misc.$(OBJEXT) nsecrecords.$(OBJEXT) pdns_recursor.$(OBJEXT) \
	pubsuffix.$(OBJEXT) qtype.$(OBJEXT) randomhelper.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) rec-carbon.$(OBJEXT) \
	rec_channel.$(OBJEXT) rec_channel_rec.$(OBJEXT) \
	recpacketcache.$(OBJEXT) recursor_cache.$(OBJEXT) \
	reczones.$(OBJEXT) responsestats.$(OBJEXT) \
	secpoll-recursor.$(OBJEXT) selectmplexer.$(OBJEXT) \
	sillyrecords.$(OBJEXT) statbag.$(OBJEXT) syncres.$(OBJEXT) \
	unix_utility.$(OBJEXT) version.$(OBJEXT) webserver.$(OBJEXT) \
	ws-api.$(OBJEXT) ws-recursor.$(OBJEXT) \
	zoneparser-tng.$(OBJEXT) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4)
pdns_recursor_OBJECTS = $(am_pdns_recursor_OBJECTS)
@LUA_TRUE@am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
pdns_recursor_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_4)
am__pdns_server_SOURCES_DIST = arguments.cc arguments.hh \
	auth-carbon.cc backends/gsql/gsqlbackend.cc \
	backends/gsql/gsqlbackend.hh backends/gsql/ssql.hh base32.cc \
	base32.hh base64.cc base64.hh bind-dnssec.schema.sqlite3.sql.h \
	bindlexer.l bindparser.cc cachecleaner.hh comment.hh \
	common_startup.cc common_startup.hh communicator.cc \
	communicator.hh dbdnsseckeeper.cc distributor.hh dns.cc dns.hh \
	dns_random.cc dns_random.hh dnsbackend.cc dnsbackend.hh \
	dnslabeltext.cc dnsname.cc dnsname.hh dnspacket.cc \
	dnspacket.hh dnsparser.cc dnsproxy.cc dnsproxy.hh \
	dnsrecords.cc dnssecinfra.cc dnssecinfra.hh dnsseckeeper.hh \
	dnssecsigner.cc dnswriter.cc dynhandler.cc dynhandler.hh \
	dynlistener.cc dynlistener.hh dynmessenger.hh ednssubnet.cc \
	ednssubnet.hh gss_context.cc gss_context.hh iputils.cc \
	iputils.hh json.cc json.hh lock.hh logger.cc logger.hh \
	lua-auth.cc lua-auth.hh lua-pdns.cc lua-iputils.cc \
	mastercommunicator.cc mbedtlscompat.hh md5.hh misc.cc misc.hh \
	nameserver.cc nameserver.hh namespaces.hh nsecrecords.cc \
	packetcache.cc packetcache.hh packethandler.cc \
	packethandler.hh pdnsexception.hh mbedtlssigners.cc qtype.cc \
	qtype.hh randomhelper.cc rcpgenerator.cc receiver.cc \
	resolver.cc resolver.hh responsestats.cc responsestats.hh \
	responsestats-auth.cc rfc2136handler.cc secpoll-auth.cc \
	secpoll-auth.hh serialtweaker.cc sha.hh signingpipe.cc \
	signingpipe.hh sillyrecords.cc slavecommunicator.cc statbag.cc \
	statbag.hh tcpreceiver.cc tcpreceiver.hh tkey.cc \
	ueberbackend.cc ueberbackend.hh unix_semaphore.cc \
	unix_utility.cc utility.hh version.cc version.hh webserver.cc \
	webserver.hh ws-api.cc ws-api.hh ws-auth.cc ws-auth.hh \
	zoneparser-tng.cc botan110signers.cc botansigners.cc \
	botan18signers.cc cryptoppsigners.cc sodiumsigners.cc \
	ssqlite3.cc ssqlite3.hh pkcs11signers.cc pkcs11signers.hh
@BOTAN110_TRUE@am__objects_5 = botan110signers.$(OBJEXT) \
@BOTAN110_TRUE@	botansigners.$(OBJEXT)
@BOTAN18_TRUE@am__objects_6 = botan18signers.$(OBJEXT) \
@BOTAN18_TRUE@	botansigners.$(OBJEXT)
@CRYPTOPP_TRUE@am__objects_7 = cryptoppsigners.$(OBJEXT)
@LIBSODIUM_TRUE@am__objects_8 = sodiumsigners.$(OBJEXT)
@SQLITE3_TRUE@am__objects_9 = ssqlite3.$(OBJEXT)
am_pdns_server_OBJECTS = arguments.$(OBJEXT) auth-carbon.$(OBJEXT) \
	backends/gsql/gsqlbackend.$(OBJEXT) base32.$(OBJEXT) \
	base64.$(OBJEXT) bindlexer.$(OBJEXT) bindparser.$(OBJEXT) \
	common_startup.$(OBJEXT) communicator.$(OBJEXT) \
	dbdnsseckeeper.$(OBJEXT) dns.$(OBJEXT) dns_random.$(OBJEXT) \
	dnsbackend.$(OBJEXT) dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) \
	dnspacket.$(OBJEXT) dnsparser.$(OBJEXT) dnsproxy.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnssecinfra.$(OBJEXT) \
	dnssecsigner.$(OBJEXT) dnswriter.$(OBJEXT) \
	dynhandler.$(OBJEXT) dynlistener.$(OBJEXT) \
	ednssubnet.$(OBJEXT) gss_context.$(OBJEXT) iputils.$(OBJEXT) \
	json.$(OBJEXT) logger.$(OBJEXT) lua-auth.$(OBJEXT) \
	lua-pdns.$(OBJEXT) lua-iputils.$(OBJEXT) \
	mastercommunicator.$(OBJEXT) misc.$(OBJEXT) \
	nameserver.$(OBJEXT) nsecrecords.$(OBJEXT) \
	packetcache.$(OBJEXT) packethandler.$(OBJEXT) \
	mbedtlssigners.$(OBJEXT) qtype.$(OBJEXT) \
	randomhelper.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	receiver.$(OBJEXT) resolver.$(OBJEXT) responsestats.$(OBJEXT) \
	responsestats-auth.$(OBJEXT) rfc2136handler.$(OBJEXT) \
	secpoll-auth.$(OBJEXT) serialtweaker.$(OBJEXT) \
	signingpipe.$(OBJEXT) sillyrecords.$(OBJEXT) \
	slavecommunicator.$(OBJEXT) statbag.$(OBJEXT) \
	tcpreceiver.$(OBJEXT) tkey.$(OBJEXT) ueberbackend.$(OBJEXT) \
	unix_semaphore.$(OBJEXT) unix_utility.$(OBJEXT) \
	version.$(OBJEXT) webserver.$(OBJEXT) ws-api.$(OBJEXT) \
	ws-auth.$(OBJEXT) zoneparser-tng.$(OBJEXT) $(am__objects_5) \
	$(am__objects_6) $(am__objects_7) $(am__objects_8) \
	$(am__objects_9) $(am__objects_1)
pdns_server_OBJECTS = $(am_pdns_server_OBJECTS)
@BOTAN110_TRUE@am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
@BOTAN18_TRUE@am__DEPENDENCIES_6 = $(am__DEPENDENCIES_1)
@CRYPTOPP_TRUE@am__DEPENDENCIES_7 = $(am__DEPENDENCIES_1)
@LIBSODIUM_TRUE@am__DEPENDENCIES_8 = $(am__DEPENDENCIES_1)
@SQLITE3_TRUE@am__DEPENDENCIES_9 = $(am__DEPENDENCIES_1)
@ORACLE_TRUE@am__DEPENDENCIES_10 = $(am__DEPENDENCIES_1)
pdns_server_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7) $(am__DEPENDENCIES_8) \
	$(am__DEPENDENCIES_9) $(am__DEPENDENCIES_10) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_3)
pdns_server_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(pdns_server_LDFLAGS) $(LDFLAGS) -o $@
am__pdnssec_SOURCES_DIST = arguments.cc backends/gsql/gsqlbackend.cc \
	backends/gsql/gsqlbackend.hh backends/gsql/ssql.hh base32.cc \
	base64.cc base64.hh bindlexer.l bindparser.yy cachecleaner.hh \
	dbdnsseckeeper.cc dnsbackend.cc dns.cc dnslabeltext.cc \
	dnsname.cc dnsname.hh dnspacket.cc dnsparser.cc dnsparser.hh \
	dns_random.cc dnsrecords.cc dnssecinfra.cc dnssecinfra.hh \
	dnssecsigner.cc dnswriter.cc dnswriter.hh dynlistener.cc \
	ednssubnet.cc gss_context.cc gss_context.hh json.cc logger.cc \
	mbedtlscompat.hh misc.cc misc.hh nsecrecords.cc packetcache.cc \
	pdnssec.cc mbedtlssigners.cc qtype.cc randomhelper.cc \
	rcpgenerator.cc rcpgenerator.hh serialtweaker.cc \
	signingpipe.cc sillyrecords.cc sstuff.hh statbag.cc \
	ueberbackend.cc unix_utility.cc zoneparser-tng.cc \
	botan110signers.cc botansigners.cc botan18signers.cc \
	cryptoppsigners.cc sodiumsigners.cc ssqlite3.cc ssqlite3.hh \
	pkcs11signers.cc pkcs11signers.hh
am_pdnssec_OBJECTS = arguments.$(OBJEXT) \
	backends/gsql/gsqlbackend.$(OBJEXT) base32.$(OBJEXT) \
	base64.$(OBJEXT) bindlexer.$(OBJEXT) bindparser.$(OBJEXT) \
	dbdnsseckeeper.$(OBJEXT) dnsbackend.$(OBJEXT) dns.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) dnspacket.$(OBJEXT) \
	dnsparser.$(OBJEXT) dns_random.$(OBJEXT) dnsrecords.$(OBJEXT) \
	dnssecinfra.$(OBJEXT) dnssecsigner.$(OBJEXT) \
	dnswriter.$(OBJEXT) dynlistener.$(OBJEXT) ednssubnet.$(OBJEXT) \
	gss_context.$(OBJEXT) json.$(OBJEXT) logger.$(OBJEXT) \
	misc.$(OBJEXT) nsecrecords.$(OBJEXT) packetcache.$(OBJEXT) \
	pdnssec.$(OBJEXT) mbedtlssigners.$(OBJEXT) qtype.$(OBJEXT) \
	randomhelper.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	serialtweaker.$(OBJEXT) signingpipe.$(OBJEXT) \
	sillyrecords.$(OBJEXT) statbag.$(OBJEXT) \
	ueberbackend.$(OBJEXT) unix_utility.$(OBJEXT) \
	zoneparser-tng.$(OBJEXT) $(am__objects_5) $(am__objects_6) \
	$(am__objects_7) $(am__objects_8) $(am__objects_9) \
	$(am__objects_1)
pdnssec_OBJECTS = $(am_pdnssec_OBJECTS)
pdnssec_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_6) $(am__DEPENDENCIES_7) \
	$(am__DEPENDENCIES_8) $(am__DEPENDENCIES_9) \
	$(am__DEPENDENCIES_10) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3)
pdnssec_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(pdnssec_LDFLAGS) $(LDFLAGS) -o $@
am_rec_control_OBJECTS = arguments.$(OBJEXT) dnsname.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	qtype.$(OBJEXT) rec_channel.$(OBJEXT) rec_control.$(OBJEXT) \
	statbag.$(OBJEXT) unix_utility.$(OBJEXT)
rec_control_OBJECTS = $(am_rec_control_OBJECTS)
rec_control_LDADD = $(LDADD)
am__saxfr_SOURCES_DIST = base32.cc base64.cc base64.hh dns_random.cc \
	dns_random.hh dnslabeltext.cc dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh dnsrecords.cc dnssecinfra.cc \
	dnswriter.cc dnswriter.hh gss_context.cc gss_context.hh \
	logger.cc mbedtlscompat.hh misc.cc misc.hh nsecrecords.cc \
	qtype.cc rcpgenerator.cc rcpgenerator.hh saxfr.cc \
	sillyrecords.cc sstuff.hh statbag.cc unix_utility.cc \
	pkcs11signers.cc pkcs11signers.hh
am_saxfr_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	dns_random.$(OBJEXT) dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) \
	dnsparser.$(OBJEXT) dnsrecords.$(OBJEXT) dnssecinfra.$(OBJEXT) \
	dnswriter.$(OBJEXT) gss_context.$(OBJEXT) logger.$(OBJEXT) \
	misc.$(OBJEXT) nsecrecords.$(OBJEXT) qtype.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) saxfr.$(OBJEXT) sillyrecords.$(OBJEXT) \
	statbag.$(OBJEXT) unix_utility.$(OBJEXT) $(am__objects_1)
saxfr_OBJECTS = $(am_saxfr_OBJECTS)
saxfr_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3)
am_sdig_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) logger.$(OBJEXT) \
	misc.$(OBJEXT) nsecrecords.$(OBJEXT) qtype.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) sdig.$(OBJEXT) sillyrecords.$(OBJEXT) \
	statbag.$(OBJEXT) unix_utility.$(OBJEXT)
sdig_OBJECTS = $(am_sdig_OBJECTS)
sdig_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_speedtest_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) logger.$(OBJEXT) \
	misc.$(OBJEXT) nsecrecords.$(OBJEXT) qtype.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) sillyrecords.$(OBJEXT) \
	speedtest.$(OBJEXT) statbag.$(OBJEXT) unix_utility.$(OBJEXT)
speedtest_OBJECTS = $(am_speedtest_OBJECTS)
speedtest_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__testrunner_SOURCES_DIST = arguments.cc base32.cc base64.cc \
	bindlexer.l bindparser.yy dns.cc dns_random.cc dnsbackend.cc \
	dnslabeltext.cc dnsname.cc dnsname.hh dnspacket.cc \
	dnsparser.cc dnsrecords.cc dnssecinfra.cc dnswriter.cc \
	ednssubnet.cc gss_context.cc gss_context.hh iputils.cc \
	logger.cc misc.cc nameserver.cc nsecrecords.cc packetcache.cc \
	qtype.cc rcpgenerator.cc responsestats.cc \
	responsestats-auth.cc sillyrecords.cc statbag.cc \
	test-arguments_cc.cc test-base32_cc.cc test-base64_cc.cc \
	test-bindparser_cc.cc test-delaypipe_hh.cc \
	test-distributor_hh.cc test-dns_random_hh.cc \
	test-dnsname_cc.cc test-dnsrecords_cc.cc test-iputils_hh.cc \
	test-md5_hh.cc test-misc_hh.cc test-nameserver_cc.cc \
	test-packetcache_cc.cc test-rcpgenerator_cc.cc test-sha_hh.cc \
	test-sholder_hh.cc test-statbag_cc.cc \
	test-zoneparser_tng_cc.cc testrunner.cc ueberbackend.cc \
	unix_utility.cc zoneparser-tng.cc zoneparser-tng.hh \
	pkcs11signers.cc pkcs11signers.hh
am_testrunner_OBJECTS = arguments.$(OBJEXT) base32.$(OBJEXT) \
	base64.$(OBJEXT) bindlexer.$(OBJEXT) bindparser.$(OBJEXT) \
	dns.$(OBJEXT) dns_random.$(OBJEXT) dnsbackend.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) dnspacket.$(OBJEXT) \
	dnsparser.$(OBJEXT) dnsrecords.$(OBJEXT) dnssecinfra.$(OBJEXT) \
	dnswriter.$(OBJEXT) ednssubnet.$(OBJEXT) gss_context.$(OBJEXT) \
	iputils.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	nameserver.$(OBJEXT) nsecrecords.$(OBJEXT) \
	packetcache.$(OBJEXT) qtype.$(OBJEXT) rcpgenerator.$(OBJEXT) \
	responsestats.$(OBJEXT) responsestats-auth.$(OBJEXT) \
	sillyrecords.$(OBJEXT) statbag.$(OBJEXT) \
	test-arguments_cc.$(OBJEXT) test-base32_cc.$(OBJEXT) \
	test-base64_cc.$(OBJEXT) test-bindparser_cc.$(OBJEXT) \
	test-delaypipe_hh.$(OBJEXT) test-distributor_hh.$(OBJEXT) \
	test-dns_random_hh.$(OBJEXT) test-dnsname_cc.$(OBJEXT) \
	test-dnsrecords_cc.$(OBJEXT) test-iputils_hh.$(OBJEXT) \
	test-md5_hh.$(OBJEXT) test-misc_hh.$(OBJEXT) \
	test-nameserver_cc.$(OBJEXT) test-packetcache_cc.$(OBJEXT) \
	test-rcpgenerator_cc.$(OBJEXT) test-sha_hh.$(OBJEXT) \
	test-sholder_hh.$(OBJEXT) test-statbag_cc.$(OBJEXT) \
	test-zoneparser_tng_cc.$(OBJEXT) testrunner.$(OBJEXT) \
	ueberbackend.$(OBJEXT) unix_utility.$(OBJEXT) \
	zoneparser-tng.$(OBJEXT) $(am__objects_1)
testrunner_OBJECTS = $(am_testrunner_OBJECTS)
testrunner_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
testrunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(testrunner_LDFLAGS) $(LDFLAGS) -o $@
am_toysdig_OBJECTS = base32.$(OBJEXT) base64.$(OBJEXT) \
	dns_random.$(OBJEXT) dnsname.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	dnsparser.$(OBJEXT) dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	ednssubnet.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	nsecrecords.$(OBJEXT) qtype.$(OBJEXT) randomhelper.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) sillyrecords.$(OBJEXT) \
	statbag.$(OBJEXT) toysdig.$(OBJEXT) unix_utility.$(OBJEXT)
toysdig_OBJECTS = $(am_toysdig_OBJECTS)
toysdig_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__tsig_tests_SOURCES_DIST = arguments.cc base32.cc base64.cc \
	base64.hh dns.cc dns_random.cc dns_random.hh dnslabeltext.cc \
	dnsname.cc dnsname.hh dnsparser.cc dnsparser.hh dnsrecords.cc \
	dnssecinfra.cc dnswriter.cc dnswriter.hh gss_context.cc \
	gss_context.hh logger.cc mbedtlscompat.hh misc.cc misc.hh \
	nsecrecords.cc qtype.cc randomhelper.cc rcpgenerator.cc \
	rcpgenerator.hh resolver.cc sillyrecords.cc sstuff.hh \
	statbag.cc tsig-tests.cc unix_utility.cc pkcs11signers.cc \
	pkcs11signers.hh
am_tsig_tests_OBJECTS = arguments.$(OBJEXT) base32.$(OBJEXT) \
	base64.$(OBJEXT) dns.$(OBJEXT) dns_random.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnssecinfra.$(OBJEXT) dnswriter.$(OBJEXT) \
	gss_context.$(OBJEXT) logger.$(OBJEXT) misc.$(OBJEXT) \
	nsecrecords.$(OBJEXT) qtype.$(OBJEXT) randomhelper.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) resolver.$(OBJEXT) \
	sillyrecords.$(OBJEXT) statbag.$(OBJEXT) tsig-tests.$(OBJEXT) \
	unix_utility.$(OBJEXT) $(am__objects_1)
tsig_tests_OBJECTS = $(am_tsig_tests_OBJECTS)
tsig_tests_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3)
am_zone2json_OBJECTS = arguments.$(OBJEXT) base32.$(OBJEXT) \
	base64.$(OBJEXT) bindlexer.$(OBJEXT) bindparser.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsname.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) logger.$(OBJEXT) \
	misc.$(OBJEXT) nsecrecords.$(OBJEXT) qtype.$(OBJEXT) \
	rcpgenerator.$(OBJEXT) sillyrecords.$(OBJEXT) \
	statbag.$(OBJEXT) unix_utility.$(OBJEXT) zone2json.$(OBJEXT) \
	zoneparser-tng.$(OBJEXT)
zone2json_OBJECTS = $(am_zone2json_OBJECTS)
zone2json_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_zone2ldap_OBJECTS = arguments.$(OBJEXT) base32.$(OBJEXT) \
	base64.$(OBJEXT) bindlexer.$(OBJEXT) bindparser.$(OBJEXT) \
	dns_random.$(OBJEXT) dnsname.$(OBJEXT) dnslabeltext.$(OBJEXT) \
	dnsparser.$(OBJEXT) dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
	logger.$(OBJEXT) misc.$(OBJEXT) nsecrecords.$(OBJEXT) \
	qtype.$(OBJEXT) rcpgenerator.$(OBJEXT) sillyrecords.$(OBJEXT) \
	statbag.$(OBJEXT) unix_utility.$(OBJEXT) zone2ldap.$(OBJEXT) \
	zoneparser-tng.$(OBJEXT)
zone2ldap_OBJECTS = $(am_zone2ldap_OBJECTS)
zone2ldap_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__zone2lmdb_SOURCES_DIST = arguments.cc base32.cc base64.cc \
	bind-dnssec.schema.sqlite3.sql.h bindlexer.l bindparser.yy \
	bindparserclasses.hh dns.cc dns_random.cc dnslabeltext.cc \
	dnsname.cc dnsname.hh dnsparser.cc dnsrecords.cc dnswriter.cc \
	logger.cc misc.cc nsecrecords.cc qtype.cc rcpgenerator.cc \
	sillyrecords.cc statbag.cc unix_utility.cc zone2lmdb.cc \
	zoneparser-tng.cc
@LMDB_TRUE@am_zone2lmdb_OBJECTS = arguments.$(OBJEXT) base32.$(OBJEXT) \
@LMDB_TRUE@	base64.$(OBJEXT) bindlexer.$(OBJEXT) \
@LMDB_TRUE@	bindparser.$(OBJEXT) dns.$(OBJEXT) \
@LMDB_TRUE@	dns_random.$(OBJEXT) dnslabeltext.$(OBJEXT) \
@LMDB_TRUE@	dnsname.$(OBJEXT) dnsparser.$(OBJEXT) \
@LMDB_TRUE@	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) \
@LMDB_TRUE@	logger.$(OBJEXT) misc.$(OBJEXT) \
@LMDB_TRUE@	nsecrecords.$(OBJEXT) qtype.$(OBJEXT) \
@LMDB_TRUE@	rcpgenerator.$(OBJEXT) sillyrecords.$(OBJEXT) \
@LMDB_TRUE@	statbag.$(OBJEXT) unix_utility.$(OBJEXT) \
@LMDB_TRUE@	zone2lmdb.$(OBJEXT) zoneparser-tng.$(OBJEXT)
zone2lmdb_OBJECTS = $(am_zone2lmdb_OBJECTS)
@LMDB_TRUE@zone2lmdb_DEPENDENCIES = $(am__DEPENDENCIES_1) \
@LMDB_TRUE@	$(am__DEPENDENCIES_1)
am_zone2sql_OBJECTS = arguments.$(OBJEXT) base32.$(OBJEXT) \
	base64.$(OBJEXT) bindlexer.$(OBJEXT) bindparser.$(OBJEXT) \
	dns.$(OBJEXT) dns_random.$(OBJEXT) dnsname.$(OBJEXT) \
	dnslabeltext.$(OBJEXT) dnsparser.$(OBJEXT) \
	dnsrecords.$(OBJEXT) dnswriter.$(OBJEXT) json.$(OBJEXT) \
	logger.$(OBJEXT) misc.$(OBJEXT) nsecrecords.$(OBJEXT) \
	qtype.$(OBJEXT) rcpgenerator.$(OBJEXT) sillyrecords.$(OBJEXT) \
	statbag.$(OBJEXT) unix_utility.$(OBJEXT) zone2sql.$(OBJEXT) \
	zoneparser-tng.$(OBJEXT)
zone2sql_OBJECTS = $(am_zone2sql_OBJECTS)
zone2sql_DEPENDENCIES = $(am__DEPENDENCIES_1)
SCRIPTS = $(noinst_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_@AM_V@)
am__v_LEX_ = $(am__v_LEX_@AM_DEFAULT_V@)
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/build-aux/ylwrap
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_@AM_V@)
am__v_YACC_ = $(am__v_YACC_@AM_DEFAULT_V@)
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
SOURCES = $(calidns_SOURCES) $(dnsbulktest_SOURCES) \
	$(dnsdemog_SOURCES) $(dnsdist_SOURCES) $(dnsgram_SOURCES) \
	$(dnsreplay_SOURCES) $(dnsscan_SOURCES) $(dnsscope_SOURCES) \
	$(dnstcpbench_SOURCES) $(dnswasher_SOURCES) $(dumresp_SOURCES) \
	$(notify_SOURCES) $(nproxy_SOURCES) $(nsec3dig_SOURCES) \
	$(pdns_control_SOURCES) $(pdns_recursor_SOURCES) \
	$(pdns_server_SOURCES) $(pdnssec_SOURCES) \
	$(rec_control_SOURCES) $(saxfr_SOURCES) $(sdig_SOURCES) \
	$(speedtest_SOURCES) $(testrunner_SOURCES) $(toysdig_SOURCES) \
	$(tsig_tests_SOURCES) $(zone2json_SOURCES) \
	$(zone2ldap_SOURCES) $(zone2lmdb_SOURCES) $(zone2sql_SOURCES)
DIST_SOURCES = $(calidns_SOURCES) $(dnsbulktest_SOURCES) \
	$(dnsdemog_SOURCES) $(dnsdist_SOURCES) $(dnsgram_SOURCES) \
	$(dnsreplay_SOURCES) $(dnsscan_SOURCES) $(dnsscope_SOURCES) \
	$(dnstcpbench_SOURCES) $(dnswasher_SOURCES) $(dumresp_SOURCES) \
	$(notify_SOURCES) $(nproxy_SOURCES) \
	$(am__nsec3dig_SOURCES_DIST) $(pdns_control_SOURCES) \
	$(am__pdns_recursor_SOURCES_DIST) \
	$(am__pdns_server_SOURCES_DIST) $(am__pdnssec_SOURCES_DIST) \
	$(rec_control_SOURCES) $(am__saxfr_SOURCES_DIST) \
	$(sdig_SOURCES) $(speedtest_SOURCES) \
	$(am__testrunner_SOURCES_DIST) $(toysdig_SOURCES) \
	$(am__tsig_tests_SOURCES_DIST) $(zone2json_SOURCES) \
	$(zone2ldap_SOURCES) $(am__zone2lmdb_SOURCES_DIST) \
	$(zone2sql_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
DATA = $(sysconf_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CPPFLAGS = @AM_CPPFLAGS@ -I$(top_srcdir)/ext/json11 \
	-I$(top_srcdir)/ext/rapidjson/include $(YAHTTP_CFLAGS) \
	$(MBEDTLS_CFLAGS) $(am__append_1) $(am__append_2) \
	$(am__append_3) $(am__append_4) $(am__append_5) \
	$(am__append_6)
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDPATH = @BOOST_LDPATH@
BOOST_PROGRAM_OPTIONS_LDFLAGS = @BOOST_PROGRAM_OPTIONS_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LDPATH = @BOOST_PROGRAM_OPTIONS_LDPATH@
BOOST_PROGRAM_OPTIONS_LIBS = @BOOST_PROGRAM_OPTIONS_LIBS@
BOOST_ROOT = @BOOST_ROOT@
BOOST_SERIALIZATION_LDFLAGS = @BOOST_SERIALIZATION_LDFLAGS@
BOOST_SERIALIZATION_LDPATH = @BOOST_SERIALIZATION_LDPATH@
BOOST_SERIALIZATION_LIBS = @BOOST_SERIALIZATION_LIBS@
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = @BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS@
BOOST_UNIT_TEST_FRAMEWORK_LDPATH = @BOOST_UNIT_TEST_FRAMEWORK_LDPATH@
BOOST_UNIT_TEST_FRAMEWORK_LIBS = @BOOST_UNIT_TEST_FRAMEWORK_LIBS@
BOTAN110_CFLAGS = @BOTAN110_CFLAGS@
BOTAN110_LIBS = @BOTAN110_LIBS@
BOTAN18_CFLAGS = @BOTAN18_CFLAGS@
BOTAN18_LIBS = @BOTAN18_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CDB_CFLAGS = @CDB_CFLAGS@
CDB_LIBS = @CDB_LIBS@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CRYPTOPP_CFLAGS = @CRYPTOPP_CFLAGS@
CRYPTOPP_LIBS = @CRYPTOPP_LIBS@
CURL = @CURL@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DYNLINKFLAGS = @DYNLINKFLAGS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GEOIP_CFLAGS = @GEOIP_CFLAGS@
GEOIP_LIBS = @GEOIP_LIBS@
GREP = @GREP@
GSS_CFLAGS = @GSS_CFLAGS@
GSS_LIBS = @GSS_LIBS@
GSS_TSIG = @GSS_TSIG@
HAVE_CXX11 = @HAVE_CXX11@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDAP_LIBS = @LDAP_LIBS@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBDL = @LIBDL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBSODIUM_CFLAGS = @LIBSODIUM_CFLAGS@
LIBSODIUM_LIBS = @LIBSODIUM_LIBS@
LIBTOOL = @LIBTOOL@
LIBZMQ_CFLAGS = @LIBZMQ_CFLAGS@
LIBZMQ_LIBS = @LIBZMQ_LIBS@
LINKCHECKER = @LINKCHECKER@
LIPO = @LIPO@
LMDB_LIBS = @LMDB_LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LUA_CFLAGS = @LUA_CFLAGS@
LUA_LIBS = @LUA_LIBS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MBEDTLS_CFLAGS = @MBEDTLS_CFLAGS@
MBEDTLS_LIBS = @MBEDTLS_LIBS@
MBEDTLS_SUBDIR = @MBEDTLS_SUBDIR@
MKDIR_P = @MKDIR_P@
MKDOCS = @MKDOCS@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_LIBS = @MYSQL_LIBS@
MYSQL_config = @MYSQL_config@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENDBX_CFLAGS = @OPENDBX_CFLAGS@
OPENDBX_LIBS = @OPENDBX_LIBS@
ORACLE_CFLAGS = @ORACLE_CFLAGS@
ORACLE_LIBS = @ORACLE_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
P11KIT1_CFLAGS = @P11KIT1_CFLAGS@
P11KIT1_LIBS = @P11KIT1_LIBS@
PACKAGE = @PACKAGE@
PACKAGEVERSION = @PACKAGEVERSION@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PANDOC = @PANDOC@
PATH_SEPARATOR = @PATH_SEPARATOR@
PGSQL_inc = @PGSQL_inc@
PGSQL_lib = @PGSQL_lib@
PGSQL_pg_config = @PGSQL_pg_config@
PIE_CFLAGS = @PIE_CFLAGS@
PIE_LDFLAGS = @PIE_LDFLAGS@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PROGRAM_LDFLAGS = @PROGRAM_LDFLAGS@
RAGEL = @RAGEL@
RANLIB = @RANLIB@
READLINE_LIBS = @READLINE_LIBS@
RELRO_LDFLAGS = @RELRO_LDFLAGS@
REMOTEBACKEND_ZEROMQ = @REMOTEBACKEND_ZEROMQ@
RT_LIBS = @RT_LIBS@
SANITIZER_FLAGS = @SANITIZER_FLAGS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SQLITE3_CFLAGS = @SQLITE3_CFLAGS@
SQLITE3_LIBS = @SQLITE3_LIBS@
STRIP = @STRIP@
THREADFLAGS = @THREADFLAGS@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
YACC = @YACC@
YAHTTP_CFLAGS = @YAHTTP_CFLAGS@
YAHTTP_LIBS = @YAHTTP_LIBS@
YAML_CFLAGS = @YAML_CFLAGS@
YAML_LIBS = @YAML_LIBS@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
moduledirs = @moduledirs@
modulelibs = @modulelibs@
moduleobjects = @moduleobjects@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pdns_configure_args = @pdns_configure_args@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
socketdir = @socketdir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CXXFLAGS = \
	-DSYSCONFDIR=\"$(sysconfdir)\" \
	-DPKGLIBDIR=\"$(pkglibdir)\" \
	-DLOCALSTATEDIR=\"$(socketdir)\"

AM_LDFLAGS = \
	$(PROGRAM_LDFLAGS) \
	$(THREADFLAGS)

AM_LFLAGS = -i
AM_YFLAGS = -d --verbose --debug
EXTRA_DIST = \
	dnslabeltext.rl \
	dnslabeltext.cc \
	effective_tld_names.dat \
	mtasker.cc \
	inflighter.cc \
	bind-dnssec.schema.sqlite3.sql \
	bindparser.h \
	named.conf.parsertest \
	pdns.conf-dist \
	dnsdistdist/html \
	delaypipe.hh delaypipe.cc

BUILT_SOURCES = \
	bind-dnssec.schema.sqlite3.sql.h \
	bindparser.h htmlfiles.h 

CLEANFILES = \
	*.gcda \
	*.gcno \
	*.gcov \
	backends/gsql/gsqlbackend.gcda \
	backends/gsql/gsqlbackend.gcno \
	backends/gsql/gsqlbackend.gcov

noinst_SCRIPTS = pdns.init
sysconf_DATA = pdns.conf-dist
pdns_server_SOURCES = arguments.cc arguments.hh auth-carbon.cc \
	backends/gsql/gsqlbackend.cc backends/gsql/gsqlbackend.hh \
	backends/gsql/ssql.hh base32.cc base32.hh base64.cc base64.hh \
	bind-dnssec.schema.sqlite3.sql.h bindlexer.l bindparser.cc \
	cachecleaner.hh comment.hh common_startup.cc common_startup.hh \
	communicator.cc communicator.hh dbdnsseckeeper.cc \
	distributor.hh dns.cc dns.hh dns_random.cc dns_random.hh \
	dnsbackend.cc dnsbackend.hh dnslabeltext.cc dnsname.cc \
	dnsname.hh dnspacket.cc dnspacket.hh dnsparser.cc dnsproxy.cc \
	dnsproxy.hh dnsrecords.cc dnssecinfra.cc dnssecinfra.hh \
	dnsseckeeper.hh dnssecsigner.cc dnswriter.cc dynhandler.cc \
	dynhandler.hh dynlistener.cc dynlistener.hh dynmessenger.hh \
	ednssubnet.cc ednssubnet.hh gss_context.cc gss_context.hh \
	iputils.cc iputils.hh json.cc json.hh lock.hh logger.cc \
	logger.hh lua-auth.cc lua-auth.hh lua-pdns.cc lua-iputils.cc \
	mastercommunicator.cc mbedtlscompat.hh md5.hh misc.cc misc.hh \
	nameserver.cc nameserver.hh namespaces.hh nsecrecords.cc \
	packetcache.cc packetcache.hh packethandler.cc \
	packethandler.hh pdnsexception.hh mbedtlssigners.cc qtype.cc \
	qtype.hh randomhelper.cc rcpgenerator.cc receiver.cc \
	resolver.cc resolver.hh responsestats.cc responsestats.hh \
	responsestats-auth.cc rfc2136handler.cc secpoll-auth.cc \
	secpoll-auth.hh serialtweaker.cc sha.hh signingpipe.cc \
	signingpipe.hh sillyrecords.cc slavecommunicator.cc statbag.cc \
	statbag.hh tcpreceiver.cc tcpreceiver.hh tkey.cc \
	ueberbackend.cc ueberbackend.hh unix_semaphore.cc \
	unix_utility.cc utility.hh version.cc version.hh webserver.cc \
	webserver.hh ws-api.cc ws-api.hh ws-auth.cc ws-auth.hh \
	zoneparser-tng.cc $(am__append_9) $(am__append_11) \
	$(am__append_13) $(am__append_15) $(am__append_17) \
	$(am__append_20)
pdns_server_LDFLAGS = \
	$(AM_LDFLAGS) \
	$(DYNLINKFLAGS) \
	$(BOOST_SERIALIZATION_LDFLAGS)

pdns_server_LDADD = @moduleobjects@ @modulelibs@ $(LIBDL) \
	$(MBEDTLS_LIBS) $(BOOST_SERIALIZATION_LIBS) $(YAHTTP_LIBS) \
	$(am__append_10) $(am__append_12) $(am__append_14) \
	$(am__append_16) $(am__append_18) $(am__append_19) \
	$(am__append_21) $(am__append_22) $(am__append_23)
pdnssec_SOURCES = arguments.cc backends/gsql/gsqlbackend.cc \
	backends/gsql/gsqlbackend.hh backends/gsql/ssql.hh base32.cc \
	base64.cc base64.hh bindlexer.l bindparser.yy cachecleaner.hh \
	dbdnsseckeeper.cc dnsbackend.cc dns.cc dnslabeltext.cc \
	dnsname.cc dnsname.hh dnspacket.cc dnsparser.cc dnsparser.hh \
	dns_random.cc dnsrecords.cc dnssecinfra.cc dnssecinfra.hh \
	dnssecsigner.cc dnswriter.cc dnswriter.hh dynlistener.cc \
	ednssubnet.cc gss_context.cc gss_context.hh json.cc logger.cc \
	mbedtlscompat.hh misc.cc misc.hh nsecrecords.cc packetcache.cc \
	pdnssec.cc mbedtlssigners.cc qtype.cc randomhelper.cc \
	rcpgenerator.cc rcpgenerator.hh serialtweaker.cc \
	signingpipe.cc sillyrecords.cc sstuff.hh statbag.cc \
	ueberbackend.cc unix_utility.cc zoneparser-tng.cc \
	$(am__append_24) $(am__append_26) $(am__append_28) \
	$(am__append_30) $(am__append_32) $(am__append_35)
pdnssec_LDFLAGS = \
	$(AM_LDFLAGS) \
	$(DYNLINKFLAGS) \
	$(BOOST_PROGRAM_OPTIONS_LDFLAGS) \
	$(BOOST_SERIALIZATION_LDFLAGS)

pdnssec_LDADD = @moduleobjects@ @modulelibs@ $(LIBDL) $(MBEDTLS_LIBS) \
	$(BOOST_PROGRAM_OPTIONS_LIBS) $(BOOST_SERIALIZATION_LIBS) \
	$(YAHTTP_LIBS) $(am__append_25) $(am__append_27) \
	$(am__append_29) $(am__append_31) $(am__append_33) \
	$(am__append_34) $(am__append_36) $(am__append_37)
zone2sql_SOURCES = \
	arguments.cc \
	base32.cc \
	base64.cc \
	bind-dnssec.schema.sqlite3.sql.h \
	bindlexer.l \
	bindparser.yy \
	bindparserclasses.hh \
	dns.cc \
	dns_random.cc \
	dnsname.cc dnsname.hh \
	dnslabeltext.cc \
	dnsparser.cc \
	dnsrecords.cc \
	dnswriter.cc \
	json.cc json.hh \
	logger.cc \
	misc.cc \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc \
	sillyrecords.cc \
	statbag.cc \
	unix_utility.cc \
	zone2sql.cc \
	zoneparser-tng.cc

zone2sql_LDADD = $(MBEDTLS_LIBS)
zone2json_SOURCES = \
	arguments.cc \
	base32.cc \
	base64.cc \
	bind-dnssec.schema.sqlite3.sql.h \
	bindlexer.l \
	bindparser.yy \
	bindparserclasses.hh \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc \
	dnsrecords.cc \
	dnswriter.cc \
	logger.cc \
	misc.cc \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc \
	sillyrecords.cc \
	statbag.cc \
	unix_utility.cc \
	zone2json.cc \
	zoneparser-tng.cc

zone2json_LDADD = $(MBEDTLS_LIBS) -L$(top_srcdir)/ext/json11 -ljson11
zone2ldap_SOURCES = \
	arguments.cc \
	base32.cc \
	base64.cc \
	bind-dnssec.schema.sqlite3.sql.h \
	bindlexer.l \
	bindparser.yy \
	bindparserclasses.hh \
	dns_random.cc \
	dnsname.cc dnsname.hh \
	dnslabeltext.cc \
	dnsparser.cc \
	dnsrecords.cc \
	dnswriter.cc \
	logger.cc \
	misc.cc \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc \
	sillyrecords.cc \
	statbag.cc \
	unix_utility.cc \
	zone2ldap.cc \
	zoneparser-tng.cc

zone2ldap_LDADD = $(MBEDTLS_LIBS)
@LMDB_TRUE@zone2lmdb_SOURCES = \
@LMDB_TRUE@	arguments.cc \
@LMDB_TRUE@	base32.cc \
@LMDB_TRUE@	base64.cc \
@LMDB_TRUE@	bind-dnssec.schema.sqlite3.sql.h \
@LMDB_TRUE@	bindlexer.l \
@LMDB_TRUE@	bindparser.yy \
@LMDB_TRUE@	bindparserclasses.hh \
@LMDB_TRUE@	dns.cc \
@LMDB_TRUE@	dns_random.cc \
@LMDB_TRUE@	dnslabeltext.cc \
@LMDB_TRUE@	dnsname.cc dnsname.hh \
@LMDB_TRUE@	dnsparser.cc \
@LMDB_TRUE@	dnsrecords.cc \
@LMDB_TRUE@	dnswriter.cc \
@LMDB_TRUE@	logger.cc \
@LMDB_TRUE@	misc.cc \
@LMDB_TRUE@	nsecrecords.cc \
@LMDB_TRUE@	qtype.cc \
@LMDB_TRUE@	rcpgenerator.cc \
@LMDB_TRUE@	sillyrecords.cc \
@LMDB_TRUE@	statbag.cc \
@LMDB_TRUE@	unix_utility.cc \
@LMDB_TRUE@	zone2lmdb.cc \
@LMDB_TRUE@	zoneparser-tng.cc

@LMDB_TRUE@zone2lmdb_LDADD = \
@LMDB_TRUE@	$(MBEDTLS_LIBS) \
@LMDB_TRUE@	$(LMDB_LIBS)

sdig_SOURCES = \
	base32.cc \
	base64.cc base64.hh \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh \
	dnsrecords.cc \
	dnswriter.cc dnswriter.hh \
	logger.cc \
	mbedtlscompat.hh \
	misc.cc misc.hh \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc rcpgenerator.hh \
	sdig.cc \
	sillyrecords.cc \
	sstuff.hh \
	statbag.cc \
	unix_utility.cc

sdig_LDADD = $(MBEDTLS_LIBS)
calidns_SOURCES = \
	base32.cc \
	base64.cc base64.hh \
	calidns.cc \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh \
	dnsrecords.cc \
	dnswriter.cc dnswriter.hh \
	iputils.cc \
	logger.cc \
	mbedtlscompat.hh \
	misc.cc misc.hh \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc rcpgenerator.hh \
	sillyrecords.cc \
	sstuff.hh \
	statbag.cc \
	unix_utility.cc

calidns_LDADD = $(MBEDTLS_LIBS)
calidns_LDFLAGS = $(THREADFLAGS) 
dumresp_SOURCES = \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dumresp.cc \
	logger.cc \
	misc.cc misc.hh \
	statbag.cc \
	unix_utility.cc \
	qtype.cc 

saxfr_SOURCES = base32.cc base64.cc base64.hh dns_random.cc \
	dns_random.hh dnslabeltext.cc dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh dnsrecords.cc dnssecinfra.cc \
	dnswriter.cc dnswriter.hh gss_context.cc gss_context.hh \
	logger.cc mbedtlscompat.hh misc.cc misc.hh nsecrecords.cc \
	qtype.cc rcpgenerator.cc rcpgenerator.hh saxfr.cc \
	sillyrecords.cc sstuff.hh statbag.cc unix_utility.cc \
	$(am__append_40)
saxfr_LDADD = $(MBEDTLS_LIBS) $(am__append_41) $(am__append_42)
dnstcpbench_SOURCES = \
	base32.cc \
	base64.cc base64.hh \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh \
	dnsrecords.cc \
	dnstcpbench.cc \
	dnswriter.cc dnswriter.hh \
	logger.cc \
	mbedtlscompat.hh \
	misc.cc misc.hh \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc rcpgenerator.hh \
	sillyrecords.cc \
	sstuff.hh \
	statbag.cc \
	unix_utility.cc

dnstcpbench_LDFLAGS = \
	$(AM_LDFLAGS) \
	$(BOOST_PROGRAM_OPTIONS_LDFLAGS)

dnstcpbench_LDADD = \
	$(MBEDTLS_LIBS) \
	$(BOOST_PROGRAM_OPTIONS_LIBS)

dnsdist_SOURCES = \
	base32.cc \
	base64.hh \
	dnsdist.cc \
	dnsdist-carbon.cc \
	dnsdist-lua.cc \
	dnsdist-tcp.cc \
	dnsdist-web.cc \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnswriter.cc \
	dolog.hh \
	iputils.cc \
	htmlfiles.h \
	mbedtlscompat.hh \
	misc.cc misc.hh \
	qtype.cc \
	sholder.hh \
	sodcrypto.cc sodcrypto.hh \
	sstuff.hh \
	../ext/json11/json11.cpp

dnsdist_LDFLAGS = \
	$(AM_LDFLAGS) 

dnsdist_LDADD = \
	$(LUA_LIBS) \
	$(READLINE_LIBS) \
	$(RT_LIBS) \
	$(YAHTTP_LIBS) \
	$(LIBSODIUM_LIBS)

nsec3dig_SOURCES = base32.cc base64.cc base64.hh dnsname.cc dnsname.hh \
	dnslabeltext.cc dnsparser.cc dnsparser.hh dnsrecords.cc \
	dnssecinfra.cc dnswriter.cc dnswriter.hh gss_context.cc \
	gss_context.hh logger.cc mbedtlscompat.hh misc.cc misc.hh \
	nsec3dig.cc nsecrecords.cc qtype.cc rcpgenerator.cc \
	rcpgenerator.hh sillyrecords.cc sstuff.hh statbag.cc \
	unix_utility.cc $(am__append_43)
nsec3dig_LDADD = $(MBEDTLS_LIBS) $(am__append_44) $(am__append_45)
toysdig_SOURCES = \
	base32.cc \
	base64.cc base64.hh \
	dns_random.cc \
	dnsname.cc dnsname.hh \
	dnslabeltext.cc \
	dnsparser.cc dnsparser.hh \
	dnsrecords.cc \
	dnswriter.cc dnswriter.hh \
	ednssubnet.cc ednssubnet.hh \
	logger.cc \
	mbedtlscompat.hh \
	misc.cc misc.hh \
	nsecrecords.cc \
	qtype.cc \
	randomhelper.cc \
	rcpgenerator.cc rcpgenerator.hh \
	sillyrecords.cc \
	sstuff.hh \
	statbag.cc \
	toysdig.cc \
	unix_utility.cc

toysdig_LDADD = $(MBEDTLS_LIBS)
tsig_tests_SOURCES = arguments.cc base32.cc base64.cc base64.hh dns.cc \
	dns_random.cc dns_random.hh dnslabeltext.cc dnsname.cc \
	dnsname.hh dnsparser.cc dnsparser.hh dnsrecords.cc \
	dnssecinfra.cc dnswriter.cc dnswriter.hh gss_context.cc \
	gss_context.hh logger.cc mbedtlscompat.hh misc.cc misc.hh \
	nsecrecords.cc qtype.cc randomhelper.cc rcpgenerator.cc \
	rcpgenerator.hh resolver.cc sillyrecords.cc sstuff.hh \
	statbag.cc tsig-tests.cc unix_utility.cc $(am__append_46)
tsig_tests_LDADD = $(MBEDTLS_LIBS) $(am__append_47) $(am__append_48)
speedtest_SOURCES = \
	base32.cc \
	base64.cc base64.hh \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh \
	dnsrecords.cc \
	dnswriter.cc dnswriter.hh \
	logger.cc \
	mbedtlscompat.hh \
	misc.cc misc.hh \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc rcpgenerator.hh \
	sillyrecords.cc \
	speedtest.cc \
	statbag.cc \
	unix_utility.cc

speedtest_LDADD = $(MBEDTLS_LIBS) \
	$(RT_LIBS)

dnswasher_SOURCES = \
	dnslabeltext.cc \
	dnsname.hh dnsname.cc \
	dnsparser.hh \
	dnspcap.cc dnspcap.hh \
	dnswasher.cc \
	dnswriter.hh \
	logger.cc \
	misc.cc \
	qtype.cc \
	statbag.cc \
	unix_utility.cc

dnsbulktest_SOURCES = \
	base32.cc \
	base64.cc \
	dnsbulktest.cc \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc \
	dnsrecords.cc \
	dnswriter.cc \
	logger.cc \
	misc.cc \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc \
	sillyrecords.cc \
	statbag.cc \
	unix_utility.cc

dnsbulktest_LDFLAGS = \
	$(AM_LDFLAGS) \
	$(BOOST_PROGRAM_OPTIONS_LDFLAGS)

dnsbulktest_LDADD = \
	$(MBEDTLS_LIBS) \
	$(BOOST_PROGRAM_OPTIONS_LIBS)

dnsscan_SOURCES = \
	anadns.hh \
	base32.cc \
	base64.cc base64.hh \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh \
	dnspcap.cc dnspcap.hh \
	dnsrecords.cc \
	dnsscan.cc \
	dnswriter.cc dnswriter.hh \
	logger.cc \
	mbedtlscompat.hh \
	misc.cc \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc rcpgenerator.hh \
	sillyrecords.cc \
	statbag.cc \
	unix_utility.cc \
	utility.hh

dnsscan_LDADD = $(MBEDTLS_LIBS)
dnsreplay_SOURCES = \
	anadns.hh \
	base32.cc \
	base64.cc base64.hh \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh \
	dnspcap.cc dnspcap.hh \
	dnsrecords.cc \
	dnsreplay.cc \
	dnswriter.cc dnswriter.hh \
	logger.cc \
	mbedtlscompat.hh \
	misc.cc \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc rcpgenerator.hh \
	sillyrecords.cc \
	statbag.cc \
	unix_utility.cc \
	utility.hh

dnsreplay_LDFLAGS = \
	$(AM_LDFLAGS) \
	$(BOOST_PROGRAM_OPTIONS_LDFLAGS)

dnsreplay_LDADD = \
	$(MBEDTLS_LIBS) \
	$(BOOST_PROGRAM_OPTIONS_LIBS)

nproxy_SOURCES = \
	base32.cc \
	base64.cc base64.hh \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh \
	dnsrecords.cc \
	dnswriter.cc dnswriter.hh \
	logger.cc \
	mbedtlscompat.hh \
	misc.cc \
	mplexer.hh \
	nproxy.cc \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc rcpgenerator.hh \
	selectmplexer.cc \
	sillyrecords.cc \
	statbag.cc \
	unix_utility.cc

nproxy_LDFLAGS = \
	$(AM_LDFLAGS) \
	$(BOOST_PROGRAM_OPTIONS_LDFLAGS)

nproxy_LDADD = \
	$(MBEDTLS_LIBS) \
	$(BOOST_PROGRAM_OPTIONS_LIBS)

notify_SOURCES = \
	arguments.cc \
	base32.cc \
	base64.cc base64.hh \
	dns.cc \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh \
	dnsrecords.cc \
	dnswriter.cc dnswriter.hh \
	logger.cc \
	mbedtlscompat.hh \
	misc.cc \
	notify.cc \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc rcpgenerator.hh \
	selectmplexer.cc \
	sillyrecords.cc \
	statbag.cc \
	unix_utility.cc

notify_LDFLAGS = \
	$(AM_LDFLAGS) \
	$(BOOST_PROGRAM_OPTIONS_LDFLAGS)

notify_LDADD = \
	$(MBEDTLS_LIBS) \
	$(BOOST_PROGRAM_OPTIONS_LIBS)

dnsscope_SOURCES = \
	arguments.cc \
	base32.cc \
	base64.cc base64.hh \
	dns.cc \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh \
	dnspcap.cc dnspcap.hh \
	dnsrecords.cc \
	dnsscope.cc \
	dnswriter.cc dnswriter.hh \
	logger.cc \
	mbedtlscompat.hh \
	misc.cc \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc rcpgenerator.hh \
	sillyrecords.cc \
	statbag.cc \
	unix_utility.cc \
	utility.hh

dnsscope_LDFLAGS = \
	$(AM_LDFLAGS) \
	$(BOOST_PROGRAM_OPTIONS_LDFLAGS)

dnsscope_LDADD = \
	$(MBEDTLS_LIBS) \
	$(BOOST_PROGRAM_OPTIONS_LIBS)

dnsgram_SOURCES = \
	base32.cc \
	base64.cc base64.hh \
	dnsgram.cc \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh \
	dnspcap.cc dnspcap.hh \
	dnsrecords.cc \
	dnswriter.cc dnswriter.hh \
	logger.cc \
	mbedtlscompat.hh \
	misc.cc \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc rcpgenerator.hh \
	sillyrecords.cc \
	statbag.cc \
	unix_utility.cc \
	utility.hh

dnsgram_LDADD = $(MBEDTLS_LIBS)
dnsdemog_SOURCES = \
	base32.cc \
	base64.cc base64.hh \
	dnsdemog.cc \
	dnslabeltext.cc \
	dnsname.cc dnsname.hh \
	dnsparser.cc dnsparser.hh \
	dnspcap.cc dnspcap.hh \
	dnsrecords.cc \
	dnswriter.cc dnswriter.hh \
	logger.cc \
	mbedtlscompat.hh \
	misc.cc \
	nsecrecords.cc \
	qtype.cc \
	rcpgenerator.cc rcpgenerator.hh \
	sillyrecords.cc \
	statbag.cc \
	unix_utility.cc \
	utility.hh

dnsdemog_LDADD = $(MBEDTLS_LIBS)
rec_control_SOURCES = \
	arguments.cc arguments.hh \
	dnsname.hh dnsname.cc \
	dnslabeltext.cc \
	logger.cc \
	misc.cc \
	qtype.cc \
	rec_channel.cc rec_channel.hh \
	rec_control.cc \
	statbag.cc \
	unix_utility.cc

testrunner_SOURCES = arguments.cc base32.cc base64.cc bindlexer.l \
	bindparser.yy dns.cc dns_random.cc dnsbackend.cc \
	dnslabeltext.cc dnsname.cc dnsname.hh dnspacket.cc \
	dnsparser.cc dnsrecords.cc dnssecinfra.cc dnswriter.cc \
	ednssubnet.cc gss_context.cc gss_context.hh iputils.cc \
	logger.cc misc.cc nameserver.cc nsecrecords.cc packetcache.cc \
	qtype.cc rcpgenerator.cc responsestats.cc \
	responsestats-auth.cc sillyrecords.cc statbag.cc \
	test-arguments_cc.cc test-base32_cc.cc test-base64_cc.cc \
	test-bindparser_cc.cc test-delaypipe_hh.cc \
	test-distributor_hh.cc test-dns_random_hh.cc \
	test-dnsname_cc.cc test-dnsrecords_cc.cc test-iputils_hh.cc \
	test-md5_hh.cc test-misc_hh.cc test-nameserver_cc.cc \
	test-packetcache_cc.cc test-rcpgenerator_cc.cc test-sha_hh.cc \
	test-sholder_hh.cc test-statbag_cc.cc \
	test-zoneparser_tng_cc.cc testrunner.cc ueberbackend.cc \
	unix_utility.cc zoneparser-tng.cc zoneparser-tng.hh \
	$(am__append_49)
testrunner_LDFLAGS = \
	$(AM_LDFLAGS) \
	$(BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS) \
	$(BOOST_SERIALIZATION_LDFLAGS)

testrunner_LDADD = $(MBEDTLS_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIBS) \
	$(BOOST_SERIALIZATION_LIBS) $(RT_LIBS) $(LIBDL) \
	$(am__append_50)
pdns_recursor_SOURCES = arguments.cc base32.cc base64.cc base64.hh \
	cachecleaner.hh dns.cc dns_random.cc dnslabeltext.cc \
	dnsname.cc dnsname.hh dnsparser.cc dnsrecords.cc dnsrecords.hh \
	dnswriter.cc dnswriter.hh iputils.cc json.cc json.hh logger.cc \
	lua-pdns.cc lua-pdns.hh lua-iputils.cc lua-recursor.cc \
	lua-recursor.hh lwres.cc lwres.hh mbedtlscompat.hh misc.cc \
	mtasker.hh nsecrecords.cc pdns_recursor.cc pubsuffix.cc \
	qtype.cc randomhelper.cc rcpgenerator.cc rcpgenerator.hh \
	rec-carbon.cc rec_channel.cc rec_channel.hh rec_channel_rec.cc \
	recpacketcache.cc recpacketcache.hh recursor_cache.cc \
	recursor_cache.hh reczones.cc resolver.hh responsestats.cc \
	secpoll-recursor.cc secpoll-recursor.hh selectmplexer.cc \
	sillyrecords.cc statbag.cc syncres.cc syncres.hh \
	unix_utility.cc version.cc version.hh webserver.cc \
	webserver.hh ws-api.cc ws-api.hh ws-recursor.cc ws-recursor.hh \
	zoneparser-tng.cc zoneparser-tng.hh $(am__append_52) \
	$(am__append_53) $(am__append_54)
pdns_recursor_LDADD = $(MBEDTLS_LIBS) $(YAHTTP_LIBS) $(am__append_51)
pdns_control_SOURCES = \
	arguments.cc \
	dynloader.cc \
	dynmessenger.cc \
	logger.cc \
	misc.cc \
	qtype.cc \
	statbag.cc \
	unix_utility.cc \
	dnsname.cc \
	dnslabeltext.cc

@UNIT_TESTS_TRUE@TESTS_ENVIRONMENT = env BOOST_TEST_LOG_LEVEL=message SRCDIR='$(srcdir)'
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .h .hh .l .lo .log .o .obj .test .test$(EXEEXT) .trs .yy
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign pdns/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign pdns/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
pdns.init: $(top_builddir)/config.status $(srcdir)/pdns.init.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

calidns$(EXEEXT): $(calidns_OBJECTS) $(calidns_DEPENDENCIES) $(EXTRA_calidns_DEPENDENCIES) 
	@rm -f calidns$(EXEEXT)
	$(AM_V_CXXLD)$(calidns_LINK) $(calidns_OBJECTS) $(calidns_LDADD) $(LIBS)

dnsbulktest$(EXEEXT): $(dnsbulktest_OBJECTS) $(dnsbulktest_DEPENDENCIES) $(EXTRA_dnsbulktest_DEPENDENCIES) 
	@rm -f dnsbulktest$(EXEEXT)
	$(AM_V_CXXLD)$(dnsbulktest_LINK) $(dnsbulktest_OBJECTS) $(dnsbulktest_LDADD) $(LIBS)

dnsdemog$(EXEEXT): $(dnsdemog_OBJECTS) $(dnsdemog_DEPENDENCIES) $(EXTRA_dnsdemog_DEPENDENCIES) 
	@rm -f dnsdemog$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dnsdemog_OBJECTS) $(dnsdemog_LDADD) $(LIBS)
../ext/json11/$(am__dirstamp):
	@$(MKDIR_P) ../ext/json11
	@: > ../ext/json11/$(am__dirstamp)
../ext/json11/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../ext/json11/$(DEPDIR)
	@: > ../ext/json11/$(DEPDIR)/$(am__dirstamp)
../ext/json11/json11.$(OBJEXT): ../ext/json11/$(am__dirstamp) \
	../ext/json11/$(DEPDIR)/$(am__dirstamp)

dnsdist$(EXEEXT): $(dnsdist_OBJECTS) $(dnsdist_DEPENDENCIES) $(EXTRA_dnsdist_DEPENDENCIES) 
	@rm -f dnsdist$(EXEEXT)
	$(AM_V_CXXLD)$(dnsdist_LINK) $(dnsdist_OBJECTS) $(dnsdist_LDADD) $(LIBS)

dnsgram$(EXEEXT): $(dnsgram_OBJECTS) $(dnsgram_DEPENDENCIES) $(EXTRA_dnsgram_DEPENDENCIES) 
	@rm -f dnsgram$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dnsgram_OBJECTS) $(dnsgram_LDADD) $(LIBS)

dnsreplay$(EXEEXT): $(dnsreplay_OBJECTS) $(dnsreplay_DEPENDENCIES) $(EXTRA_dnsreplay_DEPENDENCIES) 
	@rm -f dnsreplay$(EXEEXT)
	$(AM_V_CXXLD)$(dnsreplay_LINK) $(dnsreplay_OBJECTS) $(dnsreplay_LDADD) $(LIBS)

dnsscan$(EXEEXT): $(dnsscan_OBJECTS) $(dnsscan_DEPENDENCIES) $(EXTRA_dnsscan_DEPENDENCIES) 
	@rm -f dnsscan$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dnsscan_OBJECTS) $(dnsscan_LDADD) $(LIBS)

dnsscope$(EXEEXT): $(dnsscope_OBJECTS) $(dnsscope_DEPENDENCIES) $(EXTRA_dnsscope_DEPENDENCIES) 
	@rm -f dnsscope$(EXEEXT)
	$(AM_V_CXXLD)$(dnsscope_LINK) $(dnsscope_OBJECTS) $(dnsscope_LDADD) $(LIBS)

dnstcpbench$(EXEEXT): $(dnstcpbench_OBJECTS) $(dnstcpbench_DEPENDENCIES) $(EXTRA_dnstcpbench_DEPENDENCIES) 
	@rm -f dnstcpbench$(EXEEXT)
	$(AM_V_CXXLD)$(dnstcpbench_LINK) $(dnstcpbench_OBJECTS) $(dnstcpbench_LDADD) $(LIBS)

dnswasher$(EXEEXT): $(dnswasher_OBJECTS) $(dnswasher_DEPENDENCIES) $(EXTRA_dnswasher_DEPENDENCIES) 
	@rm -f dnswasher$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dnswasher_OBJECTS) $(dnswasher_LDADD) $(LIBS)

dumresp$(EXEEXT): $(dumresp_OBJECTS) $(dumresp_DEPENDENCIES) $(EXTRA_dumresp_DEPENDENCIES) 
	@rm -f dumresp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dumresp_OBJECTS) $(dumresp_LDADD) $(LIBS)

notify$(EXEEXT): $(notify_OBJECTS) $(notify_DEPENDENCIES) $(EXTRA_notify_DEPENDENCIES) 
	@rm -f notify$(EXEEXT)
	$(AM_V_CXXLD)$(notify_LINK) $(notify_OBJECTS) $(notify_LDADD) $(LIBS)

nproxy$(EXEEXT): $(nproxy_OBJECTS) $(nproxy_DEPENDENCIES) $(EXTRA_nproxy_DEPENDENCIES) 
	@rm -f nproxy$(EXEEXT)
	$(AM_V_CXXLD)$(nproxy_LINK) $(nproxy_OBJECTS) $(nproxy_LDADD) $(LIBS)

nsec3dig$(EXEEXT): $(nsec3dig_OBJECTS) $(nsec3dig_DEPENDENCIES) $(EXTRA_nsec3dig_DEPENDENCIES) 
	@rm -f nsec3dig$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nsec3dig_OBJECTS) $(nsec3dig_LDADD) $(LIBS)

pdns_control$(EXEEXT): $(pdns_control_OBJECTS) $(pdns_control_DEPENDENCIES) $(EXTRA_pdns_control_DEPENDENCIES) 
	@rm -f pdns_control$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pdns_control_OBJECTS) $(pdns_control_LDADD) $(LIBS)

pdns_recursor$(EXEEXT): $(pdns_recursor_OBJECTS) $(pdns_recursor_DEPENDENCIES) $(EXTRA_pdns_recursor_DEPENDENCIES) 
	@rm -f pdns_recursor$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pdns_recursor_OBJECTS) $(pdns_recursor_LDADD) $(LIBS)
backends/gsql/$(am__dirstamp):
	@$(MKDIR_P) backends/gsql
	@: > backends/gsql/$(am__dirstamp)
backends/gsql/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) backends/gsql/$(DEPDIR)
	@: > backends/gsql/$(DEPDIR)/$(am__dirstamp)
backends/gsql/gsqlbackend.$(OBJEXT): backends/gsql/$(am__dirstamp) \
	backends/gsql/$(DEPDIR)/$(am__dirstamp)

pdns_server$(EXEEXT): $(pdns_server_OBJECTS) $(pdns_server_DEPENDENCIES) $(EXTRA_pdns_server_DEPENDENCIES) 
	@rm -f pdns_server$(EXEEXT)
	$(AM_V_CXXLD)$(pdns_server_LINK) $(pdns_server_OBJECTS) $(pdns_server_LDADD) $(LIBS)
bindparser.hh: bindparser.cc
	@if test ! -f $@; then rm -f bindparser.cc; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) bindparser.cc; else :; fi

pdnssec$(EXEEXT): $(pdnssec_OBJECTS) $(pdnssec_DEPENDENCIES) $(EXTRA_pdnssec_DEPENDENCIES) 
	@rm -f pdnssec$(EXEEXT)
	$(AM_V_CXXLD)$(pdnssec_LINK) $(pdnssec_OBJECTS) $(pdnssec_LDADD) $(LIBS)

rec_control$(EXEEXT): $(rec_control_OBJECTS) $(rec_control_DEPENDENCIES) $(EXTRA_rec_control_DEPENDENCIES) 
	@rm -f rec_control$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rec_control_OBJECTS) $(rec_control_LDADD) $(LIBS)

saxfr$(EXEEXT): $(saxfr_OBJECTS) $(saxfr_DEPENDENCIES) $(EXTRA_saxfr_DEPENDENCIES) 
	@rm -f saxfr$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(saxfr_OBJECTS) $(saxfr_LDADD) $(LIBS)

sdig$(EXEEXT): $(sdig_OBJECTS) $(sdig_DEPENDENCIES) $(EXTRA_sdig_DEPENDENCIES) 
	@rm -f sdig$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sdig_OBJECTS) $(sdig_LDADD) $(LIBS)

speedtest$(EXEEXT): $(speedtest_OBJECTS) $(speedtest_DEPENDENCIES) $(EXTRA_speedtest_DEPENDENCIES) 
	@rm -f speedtest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(speedtest_OBJECTS) $(speedtest_LDADD) $(LIBS)

testrunner$(EXEEXT): $(testrunner_OBJECTS) $(testrunner_DEPENDENCIES) $(EXTRA_testrunner_DEPENDENCIES) 
	@rm -f testrunner$(EXEEXT)
	$(AM_V_CXXLD)$(testrunner_LINK) $(testrunner_OBJECTS) $(testrunner_LDADD) $(LIBS)

toysdig$(EXEEXT): $(toysdig_OBJECTS) $(toysdig_DEPENDENCIES) $(EXTRA_toysdig_DEPENDENCIES) 
	@rm -f toysdig$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(toysdig_OBJECTS) $(toysdig_LDADD) $(LIBS)

tsig-tests$(EXEEXT): $(tsig_tests_OBJECTS) $(tsig_tests_DEPENDENCIES) $(EXTRA_tsig_tests_DEPENDENCIES) 
	@rm -f tsig-tests$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tsig_tests_OBJECTS) $(tsig_tests_LDADD) $(LIBS)

zone2json$(EXEEXT): $(zone2json_OBJECTS) $(zone2json_DEPENDENCIES) $(EXTRA_zone2json_DEPENDENCIES) 
	@rm -f zone2json$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(zone2json_OBJECTS) $(zone2json_LDADD) $(LIBS)

zone2ldap$(EXEEXT): $(zone2ldap_OBJECTS) $(zone2ldap_DEPENDENCIES) $(EXTRA_zone2ldap_DEPENDENCIES) 
	@rm -f zone2ldap$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(zone2ldap_OBJECTS) $(zone2ldap_LDADD) $(LIBS)

zone2lmdb$(EXEEXT): $(zone2lmdb_OBJECTS) $(zone2lmdb_DEPENDENCIES) $(EXTRA_zone2lmdb_DEPENDENCIES) 
	@rm -f zone2lmdb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(zone2lmdb_OBJECTS) $(zone2lmdb_LDADD) $(LIBS)

zone2sql$(EXEEXT): $(zone2sql_OBJECTS) $(zone2sql_DEPENDENCIES) $(EXTRA_zone2sql_DEPENDENCIES) 
	@rm -f zone2sql$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(zone2sql_OBJECTS) $(zone2sql_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ../ext/json11/*.$(OBJEXT)
	-rm -f backends/gsql/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@../ext/json11/$(DEPDIR)/json11.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arguments.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/auth-carbon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bindlexer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bindparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/botan110signers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/botan18signers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/botansigners.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/calidns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/common_startup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/communicator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cryptoppsigners.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dbdnsseckeeper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devpollmplexer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dns_random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsbackend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsbulktest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsdemog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsdist-carbon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsdist-lua.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsdist-tcp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsdist-web.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsdist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsgram.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnslabeltext.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsname.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnspacket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnspcap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsproxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsrecords.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsreplay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsscan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsscope.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnssecinfra.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnssecsigner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnstcpbench.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnswasher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnswriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dumresp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynhandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynlistener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynloader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynmessenger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ednssubnet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epollmplexer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gss_context.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iputils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/json.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kqueuemplexer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/logger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua-auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua-iputils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua-pdns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua-recursor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lwres.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mastercommunicator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mbedtlssigners.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/misc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nameserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/notify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nproxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nsec3dig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nsecrecords.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/packetcache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/packethandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pdns_recursor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pdnssec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pkcs11signers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/portsmplexer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pubsuffix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qtype.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/randomhelper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rcpgenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rec-carbon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rec_channel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rec_channel_rec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rec_control.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/receiver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/recpacketcache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/recursor_cache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reczones.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resolver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/responsestats-auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/responsestats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rfc2136handler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/saxfr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sdig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/secpoll-auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/secpoll-recursor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/selectmplexer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serialtweaker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signingpipe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sillyrecords.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slavecommunicator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sodcrypto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sodiumsigners.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/speedtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ssqlite3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statbag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/syncres.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcpreceiver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-arguments_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-base32_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-base64_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bindparser_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-delaypipe_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-distributor_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-dns_random_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-dnsname_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-dnsrecords_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-iputils_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-md5_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-misc_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-nameserver_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-packetcache_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-rcpgenerator_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-sha_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-sholder_hh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-statbag_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-zoneparser_tng_cc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testrunner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tkey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toysdig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsig-tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ueberbackend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unix_semaphore.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unix_utility.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/webserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ws-api.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ws-auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ws-recursor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zone2json.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zone2ldap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zone2lmdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zone2sql.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zoneparser-tng.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@backends/gsql/$(DEPDIR)/gsqlbackend.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

.l.c:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.yy.cc:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-sysconfDATA: $(sysconf_DATA)
	@$(NORMAL_INSTALL)
	@list='$(sysconf_DATA)'; test -n "$(sysconfdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sysconfdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sysconfdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(sysconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(sysconfdir)" || exit $$?; \
	done

uninstall-sysconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sysconf_DATA)'; test -n "$(sysconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(sysconfdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
testrunner.log: testrunner$(EXEEXT)
	@p='testrunner$(EXEEXT)'; \
	b='testrunner'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
@UNIT_TESTS_TRUE@check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(sysconfdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ../ext/json11/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../ext/json11/$(am__dirstamp)
	-rm -f backends/gsql/$(DEPDIR)/$(am__dirstamp)
	-rm -f backends/gsql/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f bindlexer.c
	-rm -f bindparser.cc
	-rm -f bindparser.hh
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ../ext/json11/$(DEPDIR) ./$(DEPDIR) backends/gsql/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-sbinPROGRAMS \
	install-sysconfDATA

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ../ext/json11/$(DEPDIR) ./$(DEPDIR) backends/gsql/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-sbinPROGRAMS \
	uninstall-sysconfDATA

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am \
	check-local clean clean-binPROGRAMS clean-generic \
	clean-libtool clean-sbinPROGRAMS cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-sbinPROGRAMS \
	install-strip install-sysconfDATA installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-sbinPROGRAMS uninstall-sysconfDATA

@UNIT_TESTS_FALSE@check-local:
@UNIT_TESTS_FALSE@	@echo "Unit tests are not enabled"
@UNIT_TESTS_FALSE@	@echo "Run ./configure --enable-unit-tests"

dnslabeltext.cc: dnslabeltext.rl
	$(AM_V_GEN)$(RAGEL) $< -o dnslabeltext.cc

htmlfiles.h: $(srcdir)/dnsdistdist/html/*
	$(srcdir)/dnsdistdist/incfiles $(srcdir)/dnsdistdist > $@

bind-dnssec.schema.sqlite3.sql.h: bind-dnssec.schema.sqlite3.sql
	( echo 'static char sqlCreate[] __attribute__((unused))=' ; sed 's/$$/"/g' $< | sed 's/^/"/g'  ; echo ';' ) > $@

# for bindparser.h/hh
.hh.h:
	cp $< $@

pubsuffix.cc: $(srcdir)/effective_tld_names.dat
	./mkpubsuffixcc

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
