From ba4d62335dd0418ed7b4569a19ceef8406991832 Mon Sep 17 00:00:00 2001
From: bert hubert <bert.hubert@netherlabs.nl>
Date: Tue, 6 Jan 2015 12:49:31 +0100
Subject: [PATCH] kill some further mallocs and add note to remind us not to
 add them back

Conflicts:
	pdns/dnsparser.cc
---
 pdns/dnsparser.cc | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/pdns/dnsparser.cc b/pdns/dnsparser.cc
index 86f2efd..a1e21bc 100644
--- a/pdns/dnsparser.cc
+++ b/pdns/dnsparser.cc
@@ -459,6 +459,7 @@ void PacketReader::getLabelFromContent(const vector<uint8_t>& content, uint16_t&
     throw MOADNSException("Loop");
 
   int pos = frompos;
+  // it is tempting to call reserve on ret, but it turns out it creates a malloc/free storm in the loop
   for(;;) {
     unsigned char labellen=content.at(frompos++);
 
@@ -479,7 +480,7 @@ void PacketReader::getLabelFromContent(const vector<uint8_t>& content, uint16_t&
       throw MOADNSException("Overly long label during label decompression ("+lexical_cast<string>((unsigned int)labellen)+")");
     else {
       // XXX FIXME THIS MIGHT BE VERY SLOW!
-      ret.reserve(ret.size() + labellen + 2);
+
       for(string::size_type n = 0 ; n < labellen; ++n, frompos++) {
         if(content.at(frompos)=='.' || content.at(frompos)=='\\') {
           ret.append(1, '\\');
