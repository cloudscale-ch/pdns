From 6e23916789e3332acda6c178dbc63af98e9a1b5e Mon Sep 17 00:00:00 2001
From: Christian Hofstaedtler <zeha@debian.org>
Date: Fri, 2 Sep 2016 12:06:35 +0000
Subject: [PATCH 1/2] Fix build with OpenSSL 1.1.0 final

Where aes.h apparently no longer includes opensslv.h.

(cherry picked from commit e6fc073faf3b1d9b4da301821da40dff33186057)
---
 pdns/dns_random.cc | 1 +
 1 file changed, 1 insertion(+)

diff --git a/pdns/dns_random.cc b/pdns/dns_random.cc
index 4f518e0..e772571 100644
--- a/pdns/dns_random.cc
+++ b/pdns/dns_random.cc
@@ -2,6 +2,7 @@
 #include "config.h"
 #endif
 #include <openssl/aes.h>
+#include <openssl/opensslv.h>
 #if OPENSSL_VERSION_NUMBER > 0x1000100fL && !defined LIBRESSL_VERSION_NUMBER
 // Older OpenSSL does not have CRYPTO_ctr128_encrypt. Before 1.1.0 the header
 // file did not have the necessary extern "C" wrapper. In 1.1.0, AES_ctr128_encrypt

From b2860aafab0742d92f5f7275836e98bfdc1c625a Mon Sep 17 00:00:00 2001
From: Christian Hofstaedtler <christian.hofstaedtler@deduktiva.com>
Date: Fri, 2 Sep 2016 21:55:52 +0200
Subject: [PATCH 2/2] Bump version requirement for CRYPTO_ctr128_encrypt

While CRYPTO_ctr128_encrypt should be available in 1.0.1,
apparently in some library builds (Ubuntu) one can not link
against it.

(cherry picked from commit 3e4b01664660f1a8d9564508843a7e51b8f7549e)
---
 pdns/dns_random.cc | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/pdns/dns_random.cc b/pdns/dns_random.cc
index e772571..873de38 100644
--- a/pdns/dns_random.cc
+++ b/pdns/dns_random.cc
@@ -3,7 +3,7 @@
 #endif
 #include <openssl/aes.h>
 #include <openssl/opensslv.h>
-#if OPENSSL_VERSION_NUMBER > 0x1000100fL && !defined LIBRESSL_VERSION_NUMBER
+#if OPENSSL_VERSION_NUMBER > 0x1010000fL && !defined LIBRESSL_VERSION_NUMBER
 // Older OpenSSL does not have CRYPTO_ctr128_encrypt. Before 1.1.0 the header
 // file did not have the necessary extern "C" wrapper. In 1.1.0, AES_ctr128_encrypt
 // was removed.
@@ -54,7 +54,7 @@ unsigned int dns_random(unsigned int n)
   if(!g_initialized)
     abort();
   uint32_t out;
-#if OPENSSL_VERSION_NUMBER > 0x1000100fL && !defined LIBRESSL_VERSION_NUMBER
+#if OPENSSL_VERSION_NUMBER > 0x1010000fL && !defined LIBRESSL_VERSION_NUMBER
   CRYPTO_ctr128_encrypt((const unsigned char*)&g_in, (unsigned char*) &out, sizeof(g_in), &aes_key, g_counter, g_stream, &g_offset, (block128_f) AES_encrypt);
 #else
   AES_ctr128_encrypt((const unsigned char*)&g_in, (unsigned char*) &out, sizeof(g_in), &aes_key, g_counter, g_stream, &g_offset);
